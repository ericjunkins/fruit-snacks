{"version":3,"sources":["logo.svg","theme.js","components/D3Container.js","components/d3/ProgressD3.js","stages.js","components/ProgressBar.js","assets/FruitIcons.js","components/Snacks.js","components/d3/Bars.js","components/Introduction.js","components/ScrollTextBox.js","views/Main.js","App.js","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","primary","grape","strawberry","orange","peach","raspberry","D3Container","React","forwardRef","vizRef","id","viz","config","data","containerStyle","resizeTimeout","stage","timeout","ref","useRef","useState","width","height","size","setSize","useLayoutEffect","current","resizeHandler","debounce","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","containerRef","useResize","firstRender","useEffect","chart","select","call","style","Progress","svg","drawChart","backgroundRect","foregroundRect","x","chartArea","label","margin","top","bottom","left","right","selection","each","dom","d3","this","attr","append","domain","map","d","range","padding","bandwidth","length","transition","duration","text","delay","bubbles","selectAll","classed","enter","value","arguments","w","h","stages","ProgressBar","position","boxShadow","border","bg","px","my","Grape","props","viewBox","fill","cx","cy","r","Strawberry","Orange","Peach","Raspberry","Snacks","mt","py","display","borderRadius","borderColor","fontSize","color","fontWeight","columns","spacing","mb","as","boxSize","mx","nextPerfectSquare","N","nextN","Math","floor","sqrt","Bars","updateScales","stageUpdate","y","a","barChart","xAxisCall","yAxisCall","x_axis","y_axis","stackedData","statsBubbles","colorScale","dataByBatch","snacksByPerson","firstDraw","yLines","xLabel","yLabel","labels","displayData","snacks","statistics","make_y_gridlines","ticks","forEach","push","val","v","i","percentage","total","barsData","tmp","index","flavor","d3Collection","key","batch","entries","values","keys","person","rollup","filter","sort","b","scale","tickSize","tickFormat","hideLabels","stage0","tmpData","sqr","Array","from","m","min","direction","drawPackBubbles","stage1","disp","period","exit","remove","stage2","drawBubblesSize","dir","stage3","max","buckets","_","countMax","bubblesInLoc","count","yText","xText","stackedBubbles","round","loc","stage4","drawTotal","bars","stage5","totalToAvg","stage6","drawWhiskers","yMax","sel","dur","whiskers","median","topLine","bottomLine","q3","q1","midline","stage7","drawStatsBubbles","random","stage8","drawStackedArea","counter","j","y0","y1","stage9","drawCirclePack","setTimeout","node","nodes","force","strength","radius","iterations","on","ticked","join","sorted","toFixed","Introduction","pl","lineHeight","pt","ScrollTextBox","opacity","children","marginLeft","expectedValue","Main","stepIndex","setStepIndex","currentStepIndex","setCurrentStepIndex","setData","Papa","parse","download","header","complete","results","timestamp","date","c","exp","probability","slice","ranking","href","onStepEnter","entry","offset","onStepExit","toString","replace","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c042ea2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n    colors: {\r\n        primary: \"#35b9d4\",\r\n        grape: \"#9D2690\",\r\n        strawberry: \"#e01709\",\r\n        orange: \"#FF8400\",\r\n        peach: \"#FF9477\",\r\n        raspberry: \"#e30b5d\"\r\n    }\r\n})\r\n\r\nexport default theme;","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport { select } from \"d3\";\r\n\r\nfunction useResize(timeout) {\r\n    const ref = useRef();\r\n    const [ size, setSize ] = useState({ width: 0, height: 0 });\r\n\r\n    useLayoutEffect(() => {\r\n        if(!ref.current) return;\r\n\r\n        // Sets dimensions state after [timeout] ms.\r\n        const resizeHandler = debounce(() => {\r\n            setSize({\r\n                width: ref.current.offsetWidth,\r\n                height: ref.current.offsetHeight\r\n            });\r\n        }, timeout);\r\n        \r\n        // Initialize the referenced DOM element's dimensions.\r\n        resizeHandler();\r\n\r\n        // Add the event listener to the window.\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        // Remove the event listener upon unmount.\r\n        return () => window.removeEventListener(\"resize\", resizeHandler);\r\n    }, [ ref.current, timeout ]);\r\n\r\n    return { containerRef: ref, size };\r\n}\r\n\r\nconst D3Container = React.forwardRef(({ id, viz, config = {}, data, containerStyle, resizeTimeout = 100, stage}, vizRef) => {\r\n    const { containerRef, size } = useResize(resizeTimeout);\r\n    const firstRender = useRef(true);\r\n    // Upon first mount, initialize visualization with initial configuration.\r\n    useEffect(() => {\r\n        config = {\r\n            ...config, \r\n            id,\r\n            data,\r\n            stage\r\n        }\r\n        // Initialize the visualization closure with an optional configuration.\r\n        var chart = viz(config);\r\n\r\n        // Store the reference to the visualization to easily expose getters/setters.\r\n        vizRef.current = chart;\r\n        // Use selection.call to attach visualization to selected DOM element (the container div).\r\n        select(containerRef.current)\r\n            .call(chart);\r\n\r\n        firstRender.current = false;\r\n    }, []);\r\n\r\n    // Upon a resize event, set the visualization size to the proper dimensions.\r\n    useLayoutEffect(() => {\r\n        if(!vizRef.current || firstRender.current) return;\r\n        vizRef.current.size(size.width, size.height);\r\n    }, [ size ]);\r\n\r\n    // Upon a change of data, propagate the updated data down to the visualization.\r\n    // useEffect(() => {\r\n    //     if(!vizRef.current || firstRender.current) return;\r\n    //     vizRef.current.data(data);\r\n    // }, [ data ]);\r\n\r\n    useEffect(() => {\r\n        if(!vizRef.current || firstRender.current)  return;\r\n        vizRef.current.stage(stage)\r\n    }, [ stage ])\r\n\r\n\r\n\r\n    return (\r\n        <div id={id} ref={containerRef} style={{ height: \"100%\", width: \"100%\", ...containerStyle }}>\r\n            <svg width={size.width} height={size.height} />\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default D3Container;","import * as d3 from \"d3\";\r\nimport * as d3Collection from 'd3-collection';\r\n\r\nexport default function Progress(config = {}) {    \r\n    var margin = config.margin || { top: 0, bottom: 0, left: 10, right: 10 },\r\n        height = config.height,\r\n        width = config.width,\r\n        id = config.id || 'progress-viz',\r\n        data = config.data ? config.data : [],\r\n        svg,\r\n        drawChart,\r\n        backgroundRect,\r\n        foregroundRect,\r\n        x,\r\n        chartArea,\r\n        stage = 0,\r\n        label,\r\n        firstRender = true\r\n\r\n\r\n    function chart(selection){\r\n        selection.each(function() { \r\n            // Refer to the attached DOM element.\r\n            var dom = d3.select(this);\r\n            svg = dom.select('svg')\r\n                .attr('id', id)\r\n                .append('g')\r\n\r\n            chartArea = svg.append('g').attr('id', 'bar-chart')\r\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n\r\n            backgroundRect = chartArea.append('rect')\r\n                .attr('id', 'bg-rect')\r\n            foregroundRect = chartArea.append('rect')\r\n                .attr('id', 'fg-rect')\r\n            label = chartArea.append('text')    \r\n                .attr('id', 'progress-text')\r\n            \r\n\r\n\r\n            drawChart = (resizing = false) =>{\r\n                if (!data[stage]) return;\r\n                if (firstRender){\r\n                    x = d3.scaleBand()\r\n                        .domain(data.map(d=> d.stage))\r\n                        .range([0, width])\r\n                        .padding(0.3)\r\n\r\n                    backgroundRect\r\n                        .attr('x', x(0) + x.bandwidth()/2)\r\n                        .attr('width', x(data.length - 1) - x.bandwidth()/2)\r\n                        .attr('y', height/2)\r\n                        .transition().duration(1000)\r\n                        .attr('y', height/2 - 2)\r\n                        .attr('height', 4)\r\n\r\n                    foregroundRect\r\n                        .attr('x', x(0) + x.bandwidth()/2)\r\n                        .attr('width', x(data.length))\r\n                        .attr('height', 0)\r\n                        .attr('y', height/2)\r\n                        .transition().duration(1000)\r\n                        .attr('y', height/2 - 2)\r\n                        .attr('height', 4)\r\n                    label\r\n                        .attr('x', x(0) + x.bandwidth()/2)\r\n                        .attr('y', height - 5)\r\n                        .attr('font-size', '24px')\r\n                        .attr('font-weight', 400)\r\n                        .attr('text-anchor', 'middle')\r\n                        .attr('opacity', 0)\r\n                        .text(data[0].label)\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 1)\r\n                } else {\r\n                    foregroundRect\r\n                        .transition().duration(1000)\r\n                        .attr('width', x(stage) -x.bandwidth()/2)\r\n\r\n                    label\r\n                        .attr('opacity', 0)\r\n                        .transition().duration(500)\r\n                        .text(data[stage].label)\r\n                        .attr('x', x(stage) + x.bandwidth()/2)\r\n                        .transition().delay(100).duration(200)\r\n                        .attr('opacity', 1)\r\n                }\r\n                \r\n                    \r\n\r\n                let bubbles = chartArea.selectAll(\"circle\")\r\n                    .data(data, d=> d.stage)\r\n\r\n                bubbles\r\n                    .classed('primary', d=> d.stage === stage ? true : false)\r\n                    .transition().duration(1000)\r\n                    .attr('r', d=> d.stage === stage ? 20 : 10)\r\n                    .attr('stroke', d=> d.stage !== stage ? \"#000\" : \"#fff\")\r\n                    .attr('stroke-width', d=> d.stage === stage ? '2px' : '2px')\r\n\r\n                bubbles.enter()\r\n                    .append('circle')\r\n                    .attr('class', 'progress-bubbles')\r\n                    .attr('r', 0)\r\n                    .attr('cx', d=> x(d.stage) + x.bandwidth()/2)\r\n                    .attr('cy', height/2)\r\n                    .classed('primary', d=> d.stage === stage ? true : false)\r\n                    .transition().duration(1000)\r\n                    .attr('r', d=> d.stage === stage ? 20 : 10)\r\n                    .attr('stroke', d=> d.stage !== stage ? \"#000\" : \"#fff\")\r\n                    .attr('stroke-width', d=> d.stage === stage ? '2px' : '2px')\r\n                \r\n                firstRender = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    chart.data = function(value) {\r\n        if (!arguments.length) return data;\r\n\r\n        return chart;\r\n    }\r\n\r\n    chart.width = function(value) {\r\n        if (!arguments.length) return width;\r\n        width = value;\r\n        return chart;\r\n    }\r\n\r\n    chart.height = function(value) {\r\n        if (!arguments.length) return height;\r\n        height = value;\r\n        return chart;\r\n    }\r\n\r\n    chart.size = function(w, h){\r\n        if (!arguments.length) return {width: width, height: height}\r\n        chart.width(w - margin.left - margin.right);\r\n        chart.height(h - margin.top - margin.bottom);\r\n        if (firstRender) {   \r\n            drawChart(true);\r\n        }\r\n        return chart;\r\n    }\r\n\r\n    chart.stage = function(value) {\r\n        if (!arguments.length) return stage;\r\n        stage = value;\r\n        if (!firstRender) drawChart();\r\n        return chart;\r\n    }\r\n\r\n    return chart;\r\n}","const stages = [\r\n    {stage: 0, label: \"Introduction\"},\r\n    {stage: 1, label: \"Total Gummies\"},\r\n    {stage: 2, label: \"Our Data\"},\r\n    {stage: 3, label: \"Size Spread\"},\r\n    {stage: 4, label: \"Expected Value\"},\r\n    {stage: 5, label: \"Flavor Totals\"},\r\n    {stage: 6, label: \"Flavor Percentages\"},\r\n    {stage: 7, label: \"Flavor Distributions\"},\r\n    {stage: 8, label: \"Flavor Spread\"},\r\n    {stage: 9, label: \"Batch Flavors\"},\r\n    {stage: 10, label: \"Consumers\"},\r\n]\r\n\r\nexport default stages;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Box, Text, Center, Button, Spacer, Flex} from \"@chakra-ui/react\";\r\n\r\nimport Progress from \"./d3/ProgressD3\";\r\nimport D3Container from \"./../components/D3Container\";\r\n\r\nimport stages from \"./../stages\";\r\n\r\n\r\nconst ProgressBar = ({stage}) => {\r\n    const vizRef = useRef();\r\n    return (\r\n        <Box w=\"100%\" position=\"sticky\" top={0}  boxShadow=\"0px 5px 10px #000\" border=\"1px solid #000\">\r\n            <Center w=\"100%\" bg=\"#02242b\">\r\n                <Box w=\"100%\" h=\"100px\" px=\"150px\" my=\"20px\">\r\n                    <D3Container ref={vizRef} id=\"progress\" viz={Progress} data={stages} stage={stage} />\r\n                </Box>\r\n            </Center>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import {Icon} from \"@chakra-ui/react\";\r\n\r\nexport const Grape = (props) => {\r\n    return (\r\n        <svg viewBox=\"0 0 139.645 139.645\" {...props}>\r\n            <g>\r\n                <g>\r\n                    <g>\r\n                        <path fill=\"#A54D00\" d=\"M68.29,38.213c0,0-5.883-14.577,0-35.934l7.383,4.31c0,0-5.639,23.382-2.632,32.018L68.29,38.213z\r\n                            \"/>\r\n                    </g>\r\n                    <g>\r\n                        <path d=\"M75.215,40.292l-7.97-0.661l-0.346-0.857C66.65,38.16,60.894,23.479,66.843,1.88L67.361,0l10.031,5.855L77.13,6.94\r\n                            c-0.055,0.23-5.501,23.052-2.674,31.173L75.215,40.292z M69.385,36.798l1.69,0.14c-1.582-8.809,1.884-25.196,2.886-29.612\r\n                            l-4.72-2.755C65.104,21.309,68.338,33.549,69.385,36.798z\"/>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <path fill=\"#A8D626\" d=\"M71.842,37.061c0,0,2.905-22.545,26.65-20.627C98.492,16.434,95.078,40.419,71.842,37.061z\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M76.152,38.883c-1.452,0-2.974-0.114-4.525-0.338l-1.462-0.211l0.189-1.465c0.028-0.22,3.1-22.05,25.334-22.05\r\n                                c0.949,0,1.934,0.04,2.925,0.121l1.589,0.128l-0.225,1.578C99.946,16.868,96.575,38.883,76.152,38.883z M73.607,35.761\r\n                                c8.715,0.812,15.297-2.42,19.642-9.547c1.965-3.225,2.966-6.496,3.425-8.379c-0.333-0.011-0.661-0.016-0.985-0.016\r\n                                C79.07,17.819,74.637,31.182,73.607,35.761z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <path fill=\"#A8D626\" d=\"M67.804,37.061c0,0-2.907-22.545-26.652-20.627C41.152,16.434,44.568,40.419,67.804,37.061z\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M63.494,38.883L63.494,38.883c-20.423,0-23.795-22.015-23.827-22.237l-0.225-1.578l1.589-0.128\r\n                                c0.991-0.08,1.975-0.121,2.925-0.121c22.233,0,25.307,21.83,25.335,22.05l0.189,1.465l-1.462,0.211\r\n                                C66.468,38.77,64.945,38.883,63.494,38.883z M42.971,17.834c0.458,1.884,1.459,5.154,3.425,8.379\r\n                                c3.911,6.416,9.663,9.67,17.097,9.67h0.001c0.822,0,1.672-0.041,2.54-0.122C64.971,31.094,60.302,17.28,42.971,17.834z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <circle fill=\"#9D2690\" cx=\"69.823\" cy=\"124.821\" r=\"13.325\"/>\r\n                    </g>\r\n                    <g>\r\n                        <path d=\"M69.823,139.645c-8.175,0-14.826-6.65-14.826-14.825s6.651-14.826,14.826-14.826s14.825,6.651,14.825,14.826\r\n                            C84.648,132.995,77.998,139.645,69.823,139.645z M69.823,112.995c-6.521,0-11.826,5.305-11.826,11.826\r\n                            c0,6.52,5.305,11.825,11.826,11.825s11.825-5.305,11.825-11.825C81.648,118.3,76.343,112.995,69.823,112.995z\"/>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"58.03\" cy=\"105.446\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M58.03,120.272c-8.175,0-14.826-6.651-14.826-14.826c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825C72.855,113.621,66.205,120.272,58.03,120.272z M58.03,93.621\r\n                                c-6.521,0-11.826,5.305-11.826,11.825c0,6.521,5.305,11.826,11.826,11.826c6.52,0,11.825-5.305,11.825-11.826\r\n                                C69.855,98.926,64.55,93.621,58.03,93.621z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"81.615\" cy=\"105.446\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M81.616,120.272c-8.175,0-14.826-6.651-14.826-14.826c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825C96.44,113.621,89.79,120.272,81.616,120.272z M81.616,93.621\r\n                                c-6.521,0-11.826,5.305-11.826,11.825c0,6.521,5.305,11.826,11.826,11.826c6.52,0,11.825-5.305,11.825-11.826\r\n                                C93.44,98.926,88.136,93.621,81.616,93.621z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"46.237\" cy=\"86.915\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M46.238,101.741c-8.175,0-14.826-6.651-14.826-14.826c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825S54.412,101.741,46.238,101.741z M46.238,75.09c-6.521,0-11.826,5.305-11.826,11.825\r\n                                c0,6.521,5.305,11.826,11.826,11.826c6.52,0,11.825-5.305,11.825-11.826C58.063,80.395,52.758,75.09,46.238,75.09z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"93.408\" cy=\"86.915\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M93.408,101.741c-8.175,0-14.826-6.651-14.826-14.826c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825S101.582,101.741,93.408,101.741z M93.408,75.09c-6.521,0-11.826,5.305-11.826,11.825\r\n                                c0,6.521,5.305,11.826,11.826,11.826c6.52,0,11.825-5.305,11.825-11.826C105.233,80.395,99.928,75.09,93.408,75.09z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"69.823\" cy=\"86.915\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M69.823,101.741c-8.175,0-14.826-6.651-14.826-14.826c0-8.174,6.651-14.825,14.826-14.825s14.825,6.65,14.825,14.825\r\n                                C84.648,95.09,77.998,101.741,69.823,101.741z M69.823,75.09c-6.521,0-11.826,5.305-11.826,11.825\r\n                                c0,6.521,5.305,11.826,11.826,11.826s11.825-5.305,11.825-11.826C81.648,80.395,76.343,75.09,69.823,75.09z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"46.237\" cy=\"51.538\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M46.238,66.363c-8.175,0-14.826-6.65-14.826-14.825c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825C61.063,59.712,54.412,66.363,46.238,66.363z M46.238,39.713\r\n                                c-6.521,0-11.826,5.305-11.826,11.825c0,6.521,5.305,11.825,11.826,11.825c6.52,0,11.825-5.305,11.825-11.825\r\n                                S52.758,39.713,46.238,39.713z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"93.408\" cy=\"51.538\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M93.408,66.363c-8.175,0-14.826-6.65-14.826-14.825c0-8.174,6.651-14.825,14.826-14.825\r\n                                c8.174,0,14.825,6.65,14.825,14.825C108.233,59.712,101.582,66.363,93.408,66.363z M93.408,39.713\r\n                                c-6.521,0-11.826,5.305-11.826,11.825c0,6.521,5.305,11.825,11.826,11.825c6.52,0,11.825-5.305,11.825-11.825\r\n                                S99.928,39.713,93.408,39.713z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"69.823\" cy=\"51.538\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M69.823,66.363c-8.175,0-14.826-6.65-14.826-14.825c0-8.174,6.651-14.825,14.826-14.825s14.825,6.65,14.825,14.825\r\n                                C84.648,59.712,77.998,66.363,69.823,66.363z M69.823,39.713c-6.521,0-11.826,5.305-11.826,11.825\r\n                                c0,6.521,5.305,11.825,11.826,11.825s11.825-5.305,11.825-11.825C81.648,45.018,76.343,39.713,69.823,39.713z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"36.13\" cy=\"67.542\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M36.129,82.367c-8.175,0-14.825-6.65-14.825-14.825c0-8.174,6.65-14.825,14.825-14.825s14.826,6.65,14.826,14.825\r\n                                C50.955,75.716,44.304,82.367,36.129,82.367z M36.129,55.717c-6.52,0-11.825,5.305-11.825,11.825s5.305,11.825,11.825,11.825\r\n                                s11.826-5.305,11.826-11.825S42.65,55.717,36.129,55.717z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"83.3\" cy=\"67.542\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M83.3,82.367c-8.175,0-14.825-6.65-14.825-14.825c0-8.174,6.65-14.825,14.825-14.825s14.826,6.65,14.826,14.825\r\n                                C98.125,75.716,91.475,82.367,83.3,82.367z M83.3,55.717c-6.521,0-11.825,5.305-11.825,11.825S76.78,79.367,83.3,79.367\r\n                                s11.826-5.305,11.826-11.825C95.125,61.022,89.82,55.717,83.3,55.717z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"103.516\" cy=\"67.542\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M103.516,82.367c-8.174,0-14.825-6.65-14.825-14.825c0-8.174,6.65-14.825,14.825-14.825s14.826,6.65,14.826,14.825\r\n                                C118.341,75.716,111.69,82.367,103.516,82.367z M103.516,55.717c-6.52,0-11.825,5.305-11.825,11.825s5.305,11.825,11.825,11.825\r\n                                c6.521,0,11.826-5.305,11.826-11.825C115.341,61.022,110.036,55.717,103.516,55.717z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#9D2690\" cx=\"59.715\" cy=\"67.542\" r=\"13.325\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M59.714,82.367c-8.174,0-14.825-6.65-14.825-14.825c0-8.174,6.65-14.825,14.825-14.825s14.826,6.65,14.826,14.825\r\n                                C74.54,75.716,67.889,82.367,59.714,82.367z M59.714,55.717c-6.52,0-11.825,5.305-11.825,11.825s5.305,11.825,11.825,11.825\r\n                                c6.521,0,11.826-5.305,11.826-11.825S66.235,55.717,59.714,55.717z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const Strawberry = (props) => {\r\n    return (\r\n        <svg viewBox=\"0 0 441.242 441.242\" {...props}>\r\n            <g>\r\n                <path fill=\"#e01709 \" d=\"M358.314,207.485c11.11,77.26-37.75,200.5-137.69,226.26c-99.95-25.76-148.81-149-137.7-226.26   c11.1-77.26,137.7-75.42,137.7-75.42S347.214,130.225,358.314,207.485z\"/>\r\n                <path fill=\"#e01709 \" d=\"M144.924,207.485c7.546-52.521,68.458-68.484,106.699-73.324   c-18.011-2.28-30.999-2.096-30.999-2.096s-126.6-1.84-137.7,75.42c-11.11,77.26,37.75,200.5,137.7,226.26   c10.95-2.822,21.287-6.816,30.999-11.79C172.688,381.53,135.031,276.28,144.924,207.485z\"/>\r\n                <path fill=\"#90BC42\" d=\"M344.074,8.605c0,34.09-13.82,64.95-36.16,87.29c-22.34,22.34-53.2,36.16-87.29,36.16   C220.624,63.875,275.894,8.605,344.074,8.605z\"/>\r\n                <path fill=\"#9AD14B\" d=\"M220.624,132.055h-0.01c-34.1,0-64.95-13.82-87.29-36.16c-22.34-22.34-36.16-53.2-36.16-87.29   C165.344,8.604,220.624,63.875,220.624,132.055z\"/>\r\n                <path fill=\"#90BC42\" d=\"M220.614,132.055c-34.1,0-64.95-13.82-87.29-36.16c-22.34-22.34-36.16-53.2-36.16-87.29   L220.614,132.055z\"/>\r\n                <path fill=\"#9AD14B\" d=\"M220.624,132.055c34.1,0,64.95-13.82,87.29-36.16c22.34-22.34,36.16-53.2,36.16-87.29   L220.624,132.055z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M290.468,367.653c-1.646,0-3.301-0.538-4.685-1.647c-3.232-2.59-3.754-7.31-1.163-10.542   c7.211-9,13.8-19.059,19.586-29.897c19.569-36.665,28.734-80.248,23.918-113.742c-1.366-9.513-5.762-17.106-13.833-23.898   c-7.986-6.719-19.214-12.315-33.372-16.634c-5.882-1.794-12.253-3.352-18.937-4.63c-4.068-0.777-6.736-4.706-5.958-8.774   c0.777-4.069,4.713-6.743,8.774-5.958c7.208,1.378,14.104,3.064,20.497,5.015c16.104,4.912,29.108,11.475,38.652,19.504   c10.906,9.178,17.129,20.051,19.023,33.242c5.248,36.493-4.536,83.601-25.533,122.938c-6.221,11.655-13.324,22.493-21.113,32.214   C294.845,366.691,292.666,367.653,290.468,367.653z\"/>\r\n                <circle fill=\"#FFFFFF\" cx=\"242.603\" cy=\"156.283\" r=\"7.5\"/>\r\n                <g>\r\n                    <path fill=\"#333333\" d=\"M365.742,206.414c-4.996-34.76-32.115-59.947-78.426-72.841    c-6.297-1.753-12.526-3.165-18.504-4.304c48.432-19.236,82.765-66.567,82.765-121.769c0-4.143-3.357-7.5-7.5-7.5    c-56.863,0-105.369,36.434-123.422,87.18c-6.422-18.158-16.869-34.801-30.891-48.823C165.03,13.622,132.144,0,97.165,0.001    c-4.142,0-7.5,3.357-7.5,7.5c0,55.201,34.333,102.532,82.765,121.768c-5.978,1.139-12.207,2.551-18.505,4.304    c-46.31,12.894-73.429,38.081-78.425,72.841c-5.996,41.717,4.477,92.948,28.014,137.045    c27.08,50.732,68.005,85.375,115.236,97.546c0.614,0.158,1.243,0.237,1.872,0.237c0.628,0,1.257-0.079,1.872-0.237    c47.231-12.171,88.156-46.813,115.236-97.546C361.267,299.362,371.738,248.13,365.742,206.414z M262.083,48.963    c20.063-20.063,46.184-31.868,74.237-33.708c-3.834,57.771-50.175,104.111-107.946,107.945    C230.215,95.146,242.021,69.026,262.083,48.963z M104.919,15.257c57.771,3.834,104.111,50.176,107.946,107.946    c-28.054-1.84-54.174-13.646-74.237-33.709S106.759,43.311,104.919,15.257z M324.496,336.395    c-24.714,46.3-61.549,78.043-103.876,89.588c-42.327-11.545-79.161-43.288-103.875-89.588    c-21.759-40.765-31.875-89.753-26.399-127.847c9.735-67.733,121.979-68.99,129.75-68.99c0.239,0,0.379,0.001,0.415,0.001    c0.072,0.002,0.146,0.002,0.218,0c1.195-0.013,120.115-0.934,130.165,68.989C356.37,246.642,346.255,295.63,324.496,336.395z\"/>\r\n                    <circle fill=\"#333333\" cx=\"307.274\" cy=\"213.854\" r=\"7.5\"/>\r\n                    <circle fill=\"#333333\" cx=\"177.294\" cy=\"292.014\" r=\"7.5\"/>\r\n                    <circle fill=\"#333333\" cx=\"263.943\" cy=\"292.014\" r=\"7.5\"/>\r\n                    <circle fill=\"#333333\" cx=\"133.964\" cy=\"213.854\" r=\"7.5\"/>\r\n                    <circle fill=\"#333333\" cx=\"220.619\" cy=\"213.854\" r=\"7.5\"/>\r\n                    <circle fill=\"#333333\" cx=\"220.621\" cy=\"369.854\" r=\"7.5\"/>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const Orange = (props) => {\r\n    return (\r\n        <svg viewBox=\"0 0 109.997 109.997\" {...props}>\r\n            <g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle fill=\"#FF8400\" cx=\"54.999\" cy=\"67.669\" r=\"40.828\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M54.999,109.997c-23.34,0-42.328-18.988-42.328-42.328c0-23.341,18.988-42.329,42.328-42.329\r\n                                c23.339,0,42.327,18.988,42.327,42.329C97.326,91.009,78.338,109.997,54.999,109.997z M54.999,28.34\r\n                                c-21.686,0-39.328,17.642-39.328,39.329c0,21.686,17.643,39.328,39.328,39.328c21.686,0,39.327-17.643,39.327-39.328\r\n                                C94.326,45.982,76.685,28.34,54.999,28.34z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <path d=\"M22.88,68.113h-3c0-20,15.98-35.562,34.98-35.562v3C36.859,35.551,22.88,50.113,22.88,68.113z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <path fill=\"#A8D626\" d=\"M56.837,20.394c0,0,2.648-20.536,24.278-18.788C81.115,1.605,78.005,23.452,56.837,20.394z\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M60.764,22.188c-1.329,0-2.722-0.104-4.142-0.31l-1.462-0.211l0.189-1.465C55.375,20,58.189,0,78.56,0\r\n                                c0.869,0,1.77,0.037,2.677,0.11l1.589,0.128l-0.225,1.579C82.571,2.02,79.483,22.188,60.764,22.188z M58.614,19.091\r\n                                c7.803,0.689,13.702-2.241,17.606-8.641c1.73-2.836,2.637-5.712,3.069-7.44C79.044,3.003,78.801,3,78.56,3\r\n                                C63.743,3,59.62,14.815,58.614,19.091z\"/>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g>\r\n                            <path fill=\"#A8D626\" d=\"M53.159,20.394c0,0-2.646-20.536-24.277-18.788C28.882,1.605,31.993,23.452,53.159,20.394z\"/>\r\n                        </g>\r\n                        <g>\r\n                            <path d=\"M49.233,22.188L49.233,22.188C30.515,22.187,27.426,2.02,27.397,1.817l-0.225-1.579l1.589-0.128\r\n                                C29.668,0.037,30.568,0,31.438,0c20.37,0,23.184,20,23.209,20.202l0.189,1.465l-1.462,0.211\r\n                                C51.955,22.083,50.562,22.188,49.233,22.188z M30.708,3.01c0.433,1.727,1.339,4.604,3.069,7.44\r\n                                c3.536,5.798,8.736,8.737,15.455,8.737h0.001c0.696,0,1.415-0.032,2.149-0.097C50.377,14.817,46.255,3,31.438,3\r\n                                C31.196,3,30.953,3.003,30.708,3.01z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const Peach = (props) => {\r\n    return (\r\n        <svg viewBox=\"0 0 511.999 511.999\" {...props}>\r\n            <path fill=\"#FF9477\" d=\"M468.718,229.841c-24.65-66.997-89.193-114.673-164.757-114.673c-16.638,0-32.736,2.314-47.989,6.638\r\n                c-15.253-4.323-31.351-6.638-47.989-6.638c-75.039,0-139.485,46.911-164.229,113.282c-11.356,30.46-11.345,66.876-11.345,66.884\r\n                c0.422,115.528,100.36,209.06,223.588,209.06c123.49,0,223.598-93.927,223.598-209.793\r\n                C479.592,293.988,479.592,259.397,468.718,229.841z\"/>\r\n            <g>\r\n                <path fill=\"#FF6243\" d=\"M394.112,189.428c-8.11-21.337-22.464-45.976-47.75-69.106c-13.583-3.362-27.784-5.153-42.4-5.153\r\n                    c-16.628,0-32.716,2.312-47.961,6.631v0.007c0,0,74.11,4.421,123.232,75.76c0,0,4.967,7.419,12.187,3.358\r\n                    C397.411,197.554,394.112,189.428,394.112,189.428z\"/>\r\n                <path fill=\"#FF6243\" d=\"M115.145,295.334c0-0.008-0.01-36.424,11.346-66.884c20.042-53.761,66.136-94.75,122.806-108.386\r\n                    c-13.243-3.192-27.065-4.895-41.289-4.895c-75.039,0-139.485,46.911-164.229,113.282c-11.356,30.46-11.347,66.876-11.347,66.884\r\n                    c0.422,115.528,100.36,209.06,223.588,209.06c14.131,0,27.952-1.243,41.357-3.596C193.898,482.639,115.518,397.614,115.145,295.334\r\n                    z\"/>\r\n                <path fill=\"#FF6243\" d=\"M391.987,429.506c-2.052,0-4.097-0.825-5.597-2.453c-2.847-3.09-2.648-7.902,0.442-10.748\r\n                    c6.462-5.952,12.5-12.391,17.944-19.138c2.639-3.27,7.425-3.781,10.696-1.143c3.27,2.638,3.781,7.427,1.143,10.696\r\n                    c-5.914,7.328-12.466,14.318-19.477,20.774C395.677,428.841,393.829,429.506,391.987,429.506z\"/>\r\n                <path fill=\"#FF6243\" d=\"M278.432,480.376c-3.836,0-7.133-2.892-7.553-6.792c-0.449-4.176,2.571-7.927,6.747-8.378\r\n                    c29.448-3.174,58.009-13.047,82.597-28.551c3.552-2.24,8.25-1.176,10.491,2.377c2.241,3.554,1.176,8.25-2.377,10.492\r\n                    c-26.537,16.733-57.34,27.387-89.08,30.808C278.98,480.362,278.704,480.376,278.432,480.376z\"/>\r\n            </g>\r\n            <path fill=\"#6DC82A\" d=\"M245.395,9.747c-6.914-4.117-15.83-2.241-20.499,4.31c-16.755,23.508-22.601,46.473-17.375,68.258\r\n                c7.923,33.027,38.903,49.516,40.219,50.202c3.831,1.997,8.182,2.25,12.061,0.951c2.601-0.871,4.991-2.44,6.867-4.647\r\n                c17.088-20.105,23.988-40.919,20.509-61.861C281.282,31.482,246.857,10.617,245.395,9.747z\"/>\r\n            <path fill=\"#5EAC24\" d=\"M287.176,66.961c-2.776-16.703-11.874-30.164-20.88-39.827\r\n                c-10.544,5.814-19.815,13.347-27.316,22.303c-12.478,14.896-19.924,33.055-22.277,54.148c12.123,18.872,30.042,28.415,31.035,28.933\r\n                c3.831,1.997,8.182,2.25,12.061,0.951c2.601-0.871,4.991-2.44,6.867-4.647C283.757,108.716,290.656,87.903,287.176,66.961z\"/>\r\n            <path fill=\"#91DC5A\" d=\"M335.258,44.09c-2.14-0.283-21.501-2.564-41.923,4.271c-18.32,6.133-48.78,23.975-46.954,74.572\r\n                c0.257,7.084,5.38,13.049,12.344,14.371c2.054,0.389,20.647,3.613,40.822-3.139c0.001,0,0.003-0.001,0.004-0.001\r\n                c13.412-4.49,24.368-12.295,32.563-23.199c9.806-13.047,15.298-30.232,16.322-51.074C348.825,51.997,343.093,45.125,335.258,44.09z\"\r\n                />\r\n            <path fill=\"#6DC82A\" d=\"M314.953,72.573c12.642-4.231,24.872-4.968,32.867-4.849c0.278-2.551,0.486-5.161,0.617-7.833\r\n                c0.388-7.894-5.344-14.765-13.179-15.801c-2.14-0.283-21.501-2.564-41.923,4.271c-18.32,6.133-48.78,23.975-46.954,74.572\r\n                c0.257,7.084,5.379,13.049,12.343,14.371c0.813,0.154,4.225,0.751,9.293,0.999C269.827,94.433,297.744,78.334,314.953,72.573z\"/>\r\n            <path d=\"M88.19,172.734c3.882-3.934,8.008-7.72,12.261-11.251c3.232-2.683,3.676-7.478,0.993-10.711\r\n                c-2.685-3.233-7.48-3.676-10.712-0.994c-4.638,3.851-9.138,7.979-13.373,12.27c-2.95,2.99-2.839,7.729,0.072,10.756\r\n                C81.055,176.573,86.701,174.242,88.19,172.734z\"/>\r\n            <path d=\"M475.857,227.214c-21.932-59.608-72.994-103.191-134.75-115.869c8.904-13.667,13.932-30.813,14.928-51.083\r\n                c0.578-11.757-8.11-22.174-19.78-23.714c-1.164-0.153-25.238-3.988-49.477,6.113c-12.756-24.2-34.836-37.871-37.492-39.452\r\n                c-10.239-6.096-23.672-3.269-30.584,6.432c-2.925,4.104-5.574,8.256-7.875,12.34c-2.061,3.66-0.765,8.299,2.894,10.36\r\n                c3.661,2.062,8.299,0.766,10.361-2.895c2.036-3.617,4.394-7.309,7.007-10.976c2.353-3.302,6.928-4.265,10.415-2.189\r\n                c0.9,0.535,20.656,12.481,31.704,33.26c-5.721,3.621-11.544,8.349-16.736,14.546c-11.528,13.761-17.473,31.574-17.748,52.991\r\n                c-8.819-7.404-19.733-19.547-23.81-36.538c-1.549-6.46-2.004-13.13-1.349-19.825c0.408-4.181-2.65-7.901-6.83-8.309\r\n                c-4.175-0.41-7.901,2.65-8.31,6.83c-0.818,8.382-0.247,16.744,1.698,24.852c2.144,8.935,5.813,16.758,10.146,23.497\r\n                c-0.763-0.009-50.363-2.512-97.851,26.709c-3.578,2.202-4.777,6.899-2.536,10.453c3.12,4.949,9.218,3.29,10.454,2.536\r\n                c26.313-16.036,56.621-24.511,87.645-24.511c4.974,0,9.998,0.22,14.933,0.654c0.115,0.01,0.227,0.007,0.342,0.012\r\n                c10.385,10.195,25.308,21.693,49.219,22.578c0.001,0,0.001,0,0.001,0c9.874,0,19.336-1.433,28.165-4.229\r\n                c5.667,2.443,31.845,14.289,47.038,30.759c1.5,1.626,6.443,4.278,10.748,0.433c3.134-2.798,3.282-7.66,0.434-10.748\r\n                c-11.745-12.733-28.524-22.717-40.182-28.717c4.051-2.544,7.809-5.455,11.264-8.73c60.231,9.33,110.582,50.45,131.639,107.68\r\n                c10.289,27.963,10.406,60.753,10.406,62.135c0,111.485-96.893,202.185-215.992,202.185c-118.687,0-215.575-90.385-215.982-201.453\r\n                c0-0.351,0.144-35.464,10.867-64.228c5.157-13.834,12.184-26.946,20.885-38.972c2.462-3.404,1.699-8.159-1.706-10.621\r\n                c-3.402-2.462-8.158-1.7-10.62,1.705c-9.503,13.135-17.178,27.46-22.813,42.575C24.928,257.166,24.8,293.789,24.8,295.359\r\n                c0.212,58.002,24.415,112.473,68.152,153.381c43.614,40.793,101.518,63.259,163.043,63.259c61.666,0,119.665-22.553,163.312-63.506\r\n                c43.781-41.078,67.891-95.731,67.891-153.893C487.198,293.109,487.07,257.691,475.857,227.214z M297.137,126.952\r\n                c-0.012,0.004-0.023,0.008-0.037,0.012c-7.633,2.551-15.919,3.844-24.628,3.844c-6.989,0-11.803-0.875-12.328-0.975\r\n                c-3.499-0.664-6.032-3.614-6.161-7.173c-1.566-43.368,21.848-60.418,41.767-67.084c11.033-3.694,21.8-4.468,28.889-4.468\r\n                c5.377,0,8.959,0.437,9.623,0.525c3.88,0.512,6.77,3.976,6.577,7.885c-0.949,19.297-5.93,35.07-14.805,46.879\r\n                C318.783,116.045,309.06,122.96,297.137,126.952z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const Raspberry = (props) => {\r\n    return (\r\n        <svg viewBox=\"0 0 402.373 402.373\" {...props} >\r\n            <g>\r\n                <path fill=\"#e30b5d\" d=\"M201.19,101.666c0,0,28.82,82.72,80.04,108.33c0,0,28.87-52.47,17-115.67   c1.78-0.25,3.6-0.37,5.46-0.37c22.85,0,41.37,18.52,41.37,41.37c0,8.02-2.27,15.49-6.23,21.84c18.77,3.92,32.87,20.56,32.87,40.49   c0,15.44-8.47,28.91-21.01,36.01c8.11,7.55,13.18,18.32,13.18,30.28c0,22.85-18.53,41.38-41.38,41.38c-0.72,0-1.45-0.03-2.16-0.06   c1.39,4.15,2.16,8.6,2.16,13.22c0,22.85-18.52,41.38-41.37,41.38c-5.37,0-10.5-1.04-15.2-2.89c-1.77,21.22-19.54,37.9-41.22,37.9   c-8.73,0-16.84-2.72-23.52-7.33c-6.67,4.61-14.77,7.33-23.51,7.33c-21.67,0-39.45-16.68-41.22-37.9c-4.7,1.85-9.82,2.89-15.19,2.89   c-22.85,0-41.38-18.53-41.38-41.38c0-4.62,0.77-9.07,2.17-13.22c-0.72,0.03-1.44,0.06-2.17,0.06c-22.86,0-41.38-18.53-41.38-41.38   c0-11.96,5.07-22.73,13.18-30.28c-12.54-7.1-21-20.57-21-36.01c0-19.93,14.09-36.57,32.86-40.49c-3.95-6.35-6.23-13.82-6.23-21.84   c0-22.85,18.53-41.37,41.38-41.37c1.85,0,3.66,0.12,5.45,0.37c-11.87,63.2,17,115.67,17,115.67   C172.37,184.386,201.19,101.666,201.19,101.666z\"/>\r\n                <g>\r\n                    <path fill=\"#e30b5d\" d=\"M208.45,356.976c-4.7,1.85-9.82,2.89-15.19,2.89c-22.85,0-41.38-18.53-41.38-41.38    c0-4.62,0.77-9.07,2.17-13.22c-0.72,0.03-1.44,0.06-2.17,0.06c-22.86,0-41.38-18.53-41.38-41.38c0-11.96,5.07-22.73,13.18-30.28    c-12.54-7.1-21-20.57-21-36.01c0-7.669,2.093-14.846,5.729-21.003c-5.843-21.08-10.279-50.325-4.269-82.326    c-1.79-0.25-3.6-0.37-5.45-0.37c-22.85,0-41.38,18.52-41.38,41.37c0,8.02,2.28,15.49,6.23,21.84    c-18.77,3.92-32.86,20.56-32.86,40.49c0,15.44,8.46,28.91,21,36.01c-8.11,7.55-13.18,18.32-13.18,30.28    c0,22.85,18.52,41.38,41.38,41.38c0.73,0,1.45-0.03,2.17-0.06c-1.4,4.15-2.17,8.6-2.17,13.22c0,22.85,18.53,41.38,41.38,41.38    c5.37,0,10.49-1.04,15.19-2.89c1.77,21.22,19.55,37.9,41.22,37.9c8.74,0,16.84-2.72,23.51-7.33c6.68,4.61,14.79,7.33,23.52,7.33    c4.354,0,8.546-0.683,12.487-1.93C221.508,387.982,209.864,373.934,208.45,356.976z\"/>\r\n                </g>\r\n                <path fill=\"#e30b5d\" d=\"M170.237,112.72c5.005-44.121,62.786-56.894,86.373-19.262c0.6,0.962,1.187,1.918,1.756,2.88   c33.015,55.183,24.095,114.403,24.095,114.403c-56.919-6.295-112.593-73.923-112.593-73.923   C169.257,127.77,169.43,119.775,170.237,112.72z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M319.306,152.496c-1.355,0-2.727-0.367-3.961-1.137c-3.515-2.192-4.587-6.818-2.395-10.333   c1.083-1.737,1.61-3.602,1.61-5.701c0-2.656-0.974-5.215-2.743-7.206c-2.751-3.097-2.47-7.837,0.627-10.588   s7.838-2.469,10.588,0.627c4.209,4.739,6.528,10.836,6.528,17.167c0,4.919-1.306,9.508-3.882,13.638   C324.256,151.244,321.809,152.496,319.306,152.496z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M339.365,221.152c-2.614,0-5.153-1.369-6.533-3.806c-2.041-3.604-0.773-8.181,2.831-10.222   c3.416-1.934,5.537-5.562,5.537-9.469c0-5.121-3.619-9.593-8.604-10.634c-4.055-0.847-6.655-4.82-5.809-8.875   c0.847-4.055,4.824-6.653,8.875-5.809c11.9,2.485,20.538,13.133,20.538,25.318c0,9.3-5.038,17.93-13.146,22.521   C341.886,220.838,340.616,221.152,339.365,221.152z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M322.49,289.826c-4.142,0-7.5-3.358-7.5-7.5s3.358-7.5,7.5-7.5c6,0,10.88-4.881,10.88-10.88   c0-3.097-1.197-5.848-3.462-7.956c-3.032-2.822-3.202-7.568-0.38-10.6c2.823-3.032,7.569-3.202,10.6-0.38   c5.315,4.947,8.242,11.672,8.242,18.936C348.37,278.216,336.76,289.826,322.49,289.826z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M284.968,343.96c-3.46,0-6.571-2.408-7.326-5.928c-0.869-4.05,1.71-8.038,5.76-8.906   c4.976-1.068,8.587-5.542,8.587-10.64c0-1.194-0.196-2.383-0.581-3.536l-1.573-4.696c-1.315-3.928,0.802-8.178,4.73-9.494   c3.929-1.315,8.178,0.802,9.494,4.73l1.573,4.697c0.901,2.691,1.357,5.482,1.357,8.298c0,12.122-8.597,22.765-20.441,25.306   C286.018,343.905,285.489,343.96,284.968,343.96z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M224.699,379.375c-4.142,0-7.5-3.358-7.5-7.5s3.358-7.5,7.5-7.5c5.606,0,10.361-4.364,10.826-9.935   c0.344-4.128,3.971-7.198,8.097-6.851c4.128,0.344,7.195,3.97,6.851,8.097C249.365,368.97,238.044,379.375,224.699,379.375z\"/>\r\n                <path fill=\"#90BC42\" d=\"M201.19,101.666c0,0-28.82,82.72-80.05,108.33c0,0-28.87-52.47-17-115.67   c0.2-1.1,0.42-2.2,0.65-3.31c8.42-40.21,59.22-50.09,82.58-19.95c1.91,2.44,3.62,5.15,5.12,8.12   C195.69,85.526,198.62,92.966,201.19,101.666z\"/>\r\n                <path fill=\"#9AD14B\" d=\"M201.19,101.666c0,0-28.82,82.72-80.05,108.33c0,0,6.05-53.54,18.05-101.54s40-35,40-35l8.18-2.39   c1.91,2.44,3.62,5.15,5.12,8.12C195.69,85.526,198.62,92.966,201.19,101.666z\"/>\r\n                <path fill=\"#9AD14B\" d=\"M209.88,79.186c19.97-39.66,78.6-31.64,87.7,11.83c0.23,1.11,0.45,2.21,0.65,3.31   c11.87,63.2-17,115.67-17,115.67c-51.22-25.61-80.04-108.33-80.04-108.33C203.75,92.966,206.68,85.526,209.88,79.186z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M139.188,173.956c-1.826,0-3.657-0.663-5.102-2.004c-3.035-2.819-3.211-7.564-0.393-10.6   c5.564-5.992,14.669-20.243,25.64-40.128c2.001-3.626,6.563-4.946,10.19-2.944c3.626,2.001,4.945,6.563,2.944,10.19   c-11.878,21.531-21.225,36.028-27.781,43.089C143.208,173.15,141.2,173.956,139.188,173.956z\"/>\r\n                <path fill=\"#FFFFFF\" d=\"M281.258,118.842c-3.786,0-7.039-2.858-7.449-6.708c-1.181-11.104-4.57-19.858-4.604-19.946   c-1.509-3.857,0.394-8.208,4.251-9.717c3.859-1.508,8.208,0.395,9.717,4.251c0.169,0.432,4.159,10.739,5.551,23.826   c0.438,4.119-2.546,7.813-6.665,8.251C281.791,118.828,281.523,118.842,281.258,118.842z\"/>\r\n                <circle fill=\"#FFFFFF\" cx=\"175.58\" cy=\"107.458\" r=\"7.5\"/>\r\n                <circle fill=\"#FFFFFF\" cx=\"244.726\" cy=\"333.544\" r=\"7.5\"/>\r\n                <path fill=\"#333333\" d=\"M379.198,197.655c0-19.807-12.092-37.466-29.802-45.001c2.086-5.502,3.168-11.366,3.168-17.324   c0-26.78-21.652-48.588-48.369-48.863c-5.726-21.525-23.331-37.088-45.64-40.008c-19.639-2.57-38.261,5.346-49.869,20.552V7.5   c0-4.142-3.358-7.5-7.5-7.5s-7.5,3.358-7.5,7.5v59.51c-11.609-15.206-30.235-23.12-49.869-20.551   c-22.309,2.92-39.913,18.483-45.64,40.008c-26.716,0.275-48.368,22.083-48.368,48.863c0,5.958,1.082,11.822,3.168,17.324   c-17.71,7.536-29.802,25.194-29.802,45.001c0,14.504,6.475,28.14,17.34,37.334c-6.117,8.333-9.512,18.5-9.512,28.956   c0,24.537,18.173,44.909,41.768,48.36c-0.261,2.046-0.392,4.11-0.392,6.182c0,26.95,21.925,48.875,48.875,48.875   c3.143,0,6.254-0.299,9.31-0.892c5.751,20.718,24.952,35.902,47.108,35.902c8.297,0,16.333-2.068,23.51-6.018   c7.186,3.95,15.223,6.018,23.517,6.018c22.156,0,41.357-15.185,47.108-35.902c3.056,0.593,6.167,0.892,9.31,0.892   c26.95,0,48.875-21.925,48.875-48.875c0-2.072-0.131-4.136-0.392-6.182c23.594-3.451,41.768-23.823,41.768-48.36   c0-10.456-3.395-20.624-9.512-28.956C372.723,225.795,379.198,212.159,379.198,197.655z M256.608,61.332   c13.469,1.763,29.376,10.889,33.629,31.215c10.07,48.131-5.258,90.833-12.324,106.981c-39.435-24.777-64.102-85.653-68.819-98.093   c1.966-6.313,4.208-12.088,6.68-17.232c3.455-2.271,13.429-7.94,22.306-4.444c9.758,3.841,16.812,18.061,20.399,41.122   c0.576,3.703,3.768,6.348,7.401,6.348c0.383,0,0.771-0.029,1.162-0.09c4.093-0.636,6.895-4.471,6.258-8.563   c-4.516-29.031-14.517-46.787-29.726-52.773c-2.463-0.97-4.918-1.565-7.33-1.878C243.092,61.121,250.32,60.51,256.608,61.332z    M112.135,92.547c4.252-20.327,20.16-29.453,33.629-31.216c1.689-0.221,3.444-0.339,5.243-0.339c4.9,0,10.112,0.88,15.12,2.93   c-2.411,0.313-4.866,0.909-7.329,1.879c-15.209,5.986-25.21,23.742-29.727,52.773c-0.637,4.093,2.165,7.927,6.258,8.563   c0.391,0.061,0.779,0.09,1.162,0.09c3.633,0,6.826-2.646,7.401-6.348c3.58-23.011,10.613-37.222,20.339-41.098   c8.901-3.545,18.884,2.128,22.367,4.421c2.472,5.146,4.714,10.922,6.679,17.234c-4.707,12.436-29.326,73.305-68.833,98.099   C117.368,183.428,102.032,140.838,112.135,92.547z M345.581,239.16c6.957,6.478,10.789,15.28,10.789,24.786   c0,18.679-15.197,33.875-33.876,33.875c-0.609,0-1.219-0.02-1.818-0.047c-2.474-0.121-4.843,0.998-6.334,2.974   s-1.912,4.561-1.123,6.907c1.178,3.506,1.776,7.151,1.776,10.833c0,18.679-15.196,33.875-33.875,33.875   c-4.272,0-8.46-0.797-12.448-2.369c-2.206-0.871-4.695-0.644-6.71,0.607c-2.015,1.252-3.318,3.384-3.515,5.749   c-1.446,17.396-16.269,31.023-33.745,31.023c-6.917,0-13.577-2.074-19.257-5.997c-2.567-1.772-5.963-1.771-8.529,0.003   c-5.667,3.921-12.321,5.994-19.241,5.994c-17.477,0-32.299-13.627-33.745-31.023c-0.196-2.364-1.5-4.496-3.515-5.749   c-2.015-1.252-4.502-1.479-6.71-0.607c-3.988,1.572-8.176,2.369-12.448,2.369c-18.679,0-33.875-15.196-33.875-33.875   c0-3.682,0.598-7.327,1.776-10.833c0.789-2.347,0.368-4.931-1.123-6.907c-1.492-1.976-3.864-3.095-6.334-2.974   c-0.6,0.028-1.209,0.047-1.818,0.047c-18.679,0-33.876-15.196-33.876-33.875c0-9.505,3.832-18.308,10.789-24.786   c1.749-1.628,2.617-3.993,2.338-6.366c-0.28-2.374-1.673-4.472-3.753-5.649c-10.61-6.009-17.202-17.309-17.202-29.49   c0-15.955,11.313-29.897,26.899-33.151c2.398-0.501,4.401-2.142,5.364-4.395c0.962-2.253,0.764-4.834-0.532-6.914   c-3.334-5.35-5.097-11.528-5.097-17.866c0-17.558,13.428-32.036,30.554-33.711c-8.295,61.062,18.008,109.821,19.204,111.995   c1.362,2.476,3.925,3.887,6.577,3.887c1.128,0,2.273-0.256,3.349-0.793c38.888-19.444,64.951-68.509,76.692-95.025   c11.742,26.516,37.804,75.58,76.692,95.025c1.075,0.538,2.22,0.793,3.349,0.793c2.652,0,5.215-1.412,6.577-3.887   c1.196-2.175,27.499-50.933,19.204-111.995c17.126,1.674,30.555,16.152,30.555,33.711c0,6.338-1.762,12.516-5.097,17.866   c-1.296,2.08-1.494,4.661-0.532,6.914c0.963,2.253,2.965,3.894,5.364,4.395c15.586,3.254,26.899,17.197,26.899,33.151   c0,12.181-6.591,23.48-17.202,29.49c-2.08,1.177-3.473,3.275-3.753,5.649C342.964,235.167,343.832,237.531,345.581,239.16z\"/>\r\n            </g>\r\n        </svg>\r\n    )\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Box, Text, Center, SimpleGrid, Icon, VStack} from \"@chakra-ui/react\";\r\n\r\nimport {Grape, Strawberry, Orange, Peach, Raspberry} from \"./../assets/FruitIcons\";\r\n\r\n\r\nconst Snacks = (props) => {\r\n\r\n    return (\r\n        <Center w=\"100%\">\r\n            <Box w=\"80%\" mt=\"100px\" px={10} py={5} bg=\"#fff\" display=\"inline-block\" borderRadius=\"20px\" border=\"1px solid\" borderColor=\"#000\"  boxShadow=\"5px 10px 10px #000\">\r\n                <Text display=\"inline-block\" fontSize=\"32px\"> First let's </Text>\r\n                <Text display=\"inline-block\" fontSize=\"32px\" px={2} color=\"primary\" fontWeight={500}> learn  </Text>\r\n                <Text display=\"inline-block\" fontSize=\"32px\"> a little bit about the snack pack </Text>\r\n                <SimpleGrid columns={5} spacing={10} mb={\"20px\"} mt=\"70px\">\r\n                    <Icon as={Grape} boxSize=\"200px\"/>\r\n                    <Icon as={Strawberry} boxSize=\"200px\"/>\r\n                    <Icon as={Orange} boxSize=\"200px\"/>\r\n                    <Icon as={Peach} boxSize=\"200px\"/>\r\n                    <Icon as={Raspberry} boxSize=\"200px\"/>\r\n                </SimpleGrid>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" mt=\"60px\"> \r\n                    There are 5 possible flavors.\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" color=\"grape\" mx={1} fontWeight={500}> \r\n                    Grape,\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" color=\"strawberry\" mx={1} fontWeight={500}> \r\n                    Strawberry,\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" color=\"orange\" mx={1} fontWeight={500}> \r\n                    Orange,\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" color=\"peach\" mx={1} fontWeight={500}> \r\n                    Peach,\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\" color=\"raspberry\" mx={1} fontWeight={500}> \r\n                    Raspberry.\r\n                </Text>\r\n                <Text fontSize=\"32px\" display=\"inline-block\"> \r\n                    In an ideal world these would each be equally distributed in each pack, however that doesn't appear to be the case at all...\r\n                </Text>\r\n\r\n            </Box>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default Snacks;\r\n\r\n\r\n","import * as d3 from \"d3\";\r\nimport * as d3Collection from 'd3-collection';\r\n\r\n\r\nfunction nextPerfectSquare(N)\r\n{\r\n    let nextN = Math.floor(Math.sqrt(N)) + 1;\r\n \r\n    return nextN * nextN;\r\n}\r\n\r\n\r\nexport default function Bars(config = {}) {    \r\n    var margin = config.margin || { top: 50, bottom: 100, left: 100, right: 50 },\r\n        // width = config.width ? config.width - margin.left - margin.right : 900 - margin.left - margin.right,\r\n        // height = config.height ? config.height - margin.top - margin.bottom : 900 -margin.top - margin.bottom,\r\n        height = config.height,\r\n        width = config.width,\r\n        id = config.id || 'bars-viz',\r\n        data = config.data ? config.data : [],\r\n        svg,\r\n        updateScales,\r\n        res,\r\n        colors,\r\n        drawChart,\r\n        stageUpdate,\r\n        x,\r\n        y,\r\n        r,\r\n        a,\r\n        barChart,\r\n        xAxisCall,\r\n        yAxisCall,\r\n        x_axis,\r\n        y_axis,\r\n        barsData = [],\r\n        displayData = [],\r\n        snacks = ['grape', 'strawberry', 'orange', 'peach', 'raspberry'],\r\n        stage = 0,\r\n        firstRender = true,\r\n        tallBar,\r\n        stackedData,\r\n        statsBubbles,\r\n        colorScale,\r\n        dataByBatch,\r\n        statistics = [],\r\n        snacksByPerson,\r\n        simulation,\r\n        simulation2,\r\n        firstDraw,\r\n        yLines,\r\n        xLabel, yLabel, title, labels\r\n\r\n\r\n        const handler = d3.drag()\r\n\r\n        data.forEach(function(d,i){\r\n            d.index = i\r\n        })\r\n        if (!displayData.length){\r\n            snacks.forEach(function(d){\r\n                displayData.push({\r\n                    id: d,\r\n                    val: d3.sum(data, v=> v[d])\r\n                })\r\n            })\r\n        }\r\n\r\n    function make_y_gridlines() {\r\n        return d3.axisLeft(y)\r\n            .ticks(5)\r\n    }\r\n\r\n    function chart(selection){\r\n        selection.each(function() { \r\n            // Refer to the attached DOM element.\r\n            var dom = d3.select(this);\r\n            svg = dom.select('svg')\r\n                .attr('id', id)\r\n                .append('g')\r\n\r\n            barChart = svg.append('g').attr('id', 'bar-chart')\r\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n\r\n            x = d3.scaleBand()\r\n                .domain(snacks)\r\n                .range([0, width])\r\n                .padding(0)\r\n\r\n            y = d3.scaleLinear()\r\n                .range([height, 0])\r\n\r\n            r = d3.scaleLinear()\r\n\r\n            colors = [\"#9D2690 \", \"#e01709\", \"#FF8400\", \"#FF9477\", \"#e30b5d\"]\r\n            colorScale = d3.scaleOrdinal()\r\n                .domain(['grape', 'strawberry', 'orange', 'peach', 'raspberry'])\r\n                .range(colors)\r\n            \r\n            xAxisCall = barChart.append('g')\r\n                // .attr('transform', 'translate(0,' + height + ')')\r\n                .attr('class', 'axis axis--x')\r\n\r\n            yAxisCall = barChart.append('g')\r\n                .attr('class', 'axis, axis--y')\r\n\r\n            yLines = barChart.append('g')\r\n                .attr('class', 'grid')\r\n\r\n            labels = barChart.append('g')\r\n\r\n            yLabel = labels.append('text')\r\n                .attr('transform', 'rotate(-90)')\r\n                .attr('y', -75)\r\n                .attr('class', 'label')\r\n                .attr('opacity', 0)\r\n\r\n            xLabel = labels.append('text')\r\n                .attr('y', 75)\r\n                .attr('class', 'label')\r\n                .attr('opacity', 0)\r\n            \r\n            if (!displayData.length){\r\n                snacks.forEach(function(d){\r\n                    displayData.push({\r\n                        id: d,\r\n                        val: d3.mean(data, v=> v[d])\r\n                    })\r\n                })\r\n            }\r\n    \r\n            snacks.forEach(function(d, i){\r\n                let percentage = d3.sum(data, v=> v[d])/d3.sum(data, v=> v.total)\r\n                displayData[i].val = percentage\r\n            })\r\n    \r\n            let barsData = []\r\n            snacks.forEach(function(d,i){\r\n                let tmp = d3.sum(data, v=> v[d])\r\n                barsData.push({\r\n                    index: i,\r\n                    flavor: d,\r\n                    total: tmp,\r\n                    percentage: displayData[i].val\r\n                })\r\n            })\r\n            statsBubbles = []\r\n            data.forEach(function(d, i){\r\n                statsBubbles.push({ id: 'stats-bub-grape-' + i, flavor: 'grape', percentage: d.grape/d.total})\r\n                statsBubbles.push({ id: 'stats-bub-orange-' + i, flavor: 'orange', percentage: d.orange/d.total})\r\n                statsBubbles.push({ id: 'stats-bub-peach-' + i, flavor: 'peach', percentage: d.peach/d.total})\r\n                statsBubbles.push({ id: 'stats-bub-raspberry-' + i, flavor: 'raspberry', percentage: d.raspberry/d.total})\r\n                statsBubbles.push({ id: 'stats-bub-strawberry-' + i, flavor: 'strawberry', percentage: d.strawberry/d.total})\r\n            })\r\n\r\n            // console.log(data)\r\n            dataByBatch = d3Collection.nest()\r\n                .key(function(d){ return d.batch})\r\n                .entries(data)\r\n\r\n            dataByBatch.forEach(function(d){\r\n                let total = d3.sum(d.values, v=> v.total)\r\n                d.data = [\r\n                    {flavor: 'grape', percentage: d3.sum(d.values, v=> v.grape)/total},\r\n                    {flavor: 'strawberry', percentage: d3.sum(d.values, v=> v.strawberry)/total},\r\n                    {flavor: 'orange', percentage: d3.sum(d.values, v=> v.orange)/total},\r\n                    {flavor: 'peach', percentage: d3.sum(d.values, v=> v.peach)/total},\r\n                    {flavor: 'raspberry', percentage: d3.sum(d.values, v=> v.raspberry)/total}\r\n                ]\r\n            })\r\n            // console.log(dataByBatch)\r\n\r\n            stackedData = d3.stack()\r\n                .keys([0, 1, 2, 3, 4])\r\n                .value(function(d, key){\r\n                    // console.log(d.data[key], key)\r\n                    return d.data[key].percentage\r\n                })\r\n                (dataByBatch)\r\n\r\n            snacksByPerson = d3Collection.nest()\r\n                .key(function(d){ return d.person})\r\n                .rollup(function(v){ return v.length})\r\n                .entries(data)\r\n            \r\n            snacksByPerson = snacksByPerson.filter(d=> d.key != \"Unknown\")\r\n            snacksByPerson.sort((a,b) => d3.descending(a.value, b.value))\r\n\r\n            x_axis = d3.axisBottom()\r\n            y_axis = d3.axisLeft()\r\n\r\n            updateScales = (ticks) => {\r\n\r\n                x_axis.scale(x).ticks(ticks)\r\n                y_axis.scale(y).ticks(5)\r\n\r\n                {\r\n                    xAxisCall\r\n                        .attr('transform', 'translate(0,' + height + ')')\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 1)\r\n                        .call(x_axis)\r\n\r\n                    yAxisCall\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 1)\r\n                        .call(y_axis)\r\n\r\n                    yLines.call(make_y_gridlines()\r\n                        .tickSize(-width)\r\n                        .tickFormat(\"\")\r\n                    )\r\n                    yLines\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 1)\r\n                }\r\n\r\n            }        \r\n            \r\n            stageUpdate = () => {\r\n                if (firstRender) return\r\n                drawChart();\r\n            }\r\n\r\n            let makeLabels = (yText, xText, titleText) => {\r\n                yLabel.attr('x', -height/2)\r\n                    .text(yText)\r\n                    .attr('text-anchor', 'middle')\r\n                    .transition().duration(1000)\r\n                    .attr('opacity', 1)\r\n\r\n                xLabel\r\n                    .attr('transform', 'translate(0,' + height + ')')\r\n                    .text(xText)\r\n                    .attr('x', width/2)\r\n                    .attr('text-anchor', 'middle')\r\n                    .transition().duration(1000)\r\n                    .attr('opacity', 1)\r\n            }\r\n\r\n            let hideLabels = () => {\r\n                yLabel.transition().duration(1000).attr('opacity', 0)\r\n                xLabel.transition().duration(1000).attr('opacity', 0)\r\n            }\r\n\r\n            let stage0 = () => {\r\n                let tmpData = [];\r\n                data.forEach(function(d){\r\n                    tmpData.push(d)\r\n                })\r\n                for (var i=0; i < 90 * 11/2; i++){\r\n                    tmpData.push({\r\n                        index: i + data.length\r\n                    })\r\n                }\r\n                let sqr = Math.sqrt(nextPerfectSquare(tmpData.length))\r\n                let dom = Array.from({length: sqr}, (x, i)=> i)\r\n                x.domain(dom)\r\n                y = d3.scaleBand()\r\n                    .domain(dom)\r\n                    .range([height, 0])\r\n                    .padding(0)\r\n\r\n                let m = Math.min(x.bandwidth(), y.bandwidth())/2\r\n                r.domain(d3.extent(data, d=> d.total))\r\n                    .range([m * 0.15, m])\r\n                    \r\n                if (stage.direction === 'down'){\r\n                    drawPackBubbles(tmpData)\r\n                } else {\r\n                    drawPackBubbles([])\r\n                }\r\n            }\r\n\r\n            let stage1 = () => {\r\n                let tmpData = [];\r\n                data.forEach(function(d){\r\n                    tmpData.push(d)\r\n                })\r\n                for (var i=0; i < 90 * 6/2; i++){\r\n                    tmpData.push({\r\n                        index: i + data.length\r\n                    })\r\n                }\r\n                let disp = (stage.direction === 'down' ? data : tmpData)\r\n                let sqr = Math.sqrt(nextPerfectSquare(disp.length))\r\n                let dom = Array.from({length: sqr}, (x, i) => i)\r\n                x.domain(dom)\r\n                y = d3.scaleBand()\r\n                    .domain(dom)\r\n                    .range([height, 0])\r\n                    .padding(0)\r\n\r\n                let m = Math.min(x.bandwidth(), y.bandwidth())/2\r\n                \r\n                r.domain(d3.extent(disp, d=> d.total))\r\n                    .range([m * 0.15, m])\r\n                \r\n                if (stage.direction === 'down'){\r\n                    drawPackBubbles(disp)\r\n                } else {\r\n                    drawPackBubbles(disp)\r\n                }\r\n            }\r\n\r\n            let drawPackBubbles = (display) => {\r\n                let sqr = Math.sqrt(nextPerfectSquare(display.length))\r\n                let bubbles = barChart.selectAll(\"ellipse\")\r\n                    .data(display, d=> d.index)\r\n\r\n\r\n                let e = d3.easeElasticOut.period(1.5)\r\n                bubbles.exit()\r\n                    // .transition().ease(e).delay((d,i)=> introDelay/( 2 * data.length)* i).duration(introDelay/4)\r\n                    .attr('class', display.length ? 'none' : 'primary')\r\n                    .attr('fill', '#cf1717')\r\n                    .transition().duration(display.length ? 2500 : 500)\r\n                    .attr('rx', 0)\r\n                    .attr('ry', 0)\r\n                    // .attr('cy', -100)\r\n                    .remove()\r\n\r\n                bubbles\r\n                    .transition().duration(display.length ? 2500 : 1000)\r\n                    // .attr('r', r(d3.mean(display, d=> d.total)))\r\n                    .attr('rx', r(d3.mean(display, d=> d.total)))\r\n                    .attr('ry', r(d3.mean(display, d=> d.total)))\r\n                    .attr('cx', (d,i) => x(i % sqr) + x.bandwidth()/2)\r\n                    .attr('cy', (d,i) => y(Math.floor(i/sqr)) + y.bandwidth()/2)\r\n\r\n                bubbles.enter()\r\n                    .append('ellipse')\r\n                        .attr('class', 'primary')\r\n                        .attr('cx', (d,i) => x(i % sqr) + x.bandwidth()/2)\r\n                        .attr('cy', -(10 * r.domain()[1]))\r\n                        .attr('r', 0)\r\n                        .attr('stroke', '#000')\r\n                        .attr('stroke-width', '2px')\r\n                        // .transition().ease(e).delay((d,i)=> introDelay/(data.length)* i).duration(introDelay/2)\r\n                        .transition().duration(1000)\r\n                        // .attr('r', r(d3.mean(display, d=> d.total)))\r\n                        .attr('rx', r(d3.mean(display, d=> d.total)))\r\n                        .attr('ry', r(d3.mean(display, d=> d.total)))\r\n                        .attr('cy', (d,i) => y(Math.floor(i/sqr)) + y.bandwidth()/2)\r\n\r\n            }\r\n\r\n            let stage2 = () => {\r\n                let sqr = Math.sqrt(nextPerfectSquare(data.length))\r\n                let dom = Array.from({length: sqr}, (x, i) => i)\r\n                let m = Math.min(x.bandwidth(), y.bandwidth())/2\r\n\r\n                r.domain(d3.extent(data, d=> d.total))\r\n                    .range([m * 0.15, m])\r\n\r\n                    x = d3.scaleBand()\r\n                    .domain(dom)\r\n                    .range([0, width])\r\n                    .padding(0)\r\n\r\n                y = d3.scaleBand()\r\n                    .domain(dom)\r\n                    .range([height, 0])\r\n                    .padding(0)\r\n\r\n                if (stage.direction === 'down'){\r\n                    drawBubblesSize(data)\r\n                } else {\r\n                    drawPackBubbles(data)\r\n                }\r\n                \r\n            }\r\n\r\n            let drawBubblesSize = (display, dir) => {\r\n                let sqr = Math.sqrt(nextPerfectSquare(data.length))\r\n                let bubbles = barChart.selectAll('ellipse')\r\n                    .data(display, d=> d.index)\r\n\r\n                bubbles.exit()\r\n                    .transition().duration(250)\r\n                    .attr('cy', height)\r\n                    .attr('r', 0)\r\n                    .remove()\r\n\r\n                bubbles\r\n                    .transition().duration(1000)\r\n                    .attr('cx', (d,i) => x(i % sqr) + x.bandwidth()/2)\r\n                    .attr('cy', (d,i) => y(Math.floor(i/sqr)) + y.bandwidth()/2)\r\n                    // .attr('r', d=> r(d.total))\r\n                    .attr('rx', d=> r(d.total))\r\n                    .attr('ry', d=> r(d.total))\r\n\r\n                bubbles.enter()\r\n                    .append('circle')\r\n                        .attr('class', 'primary')\r\n                        .attr('cx', (d,i) => x(i % sqr) + x.bandwidth()/2)\r\n                        .attr('cy', -(10 * r.domain()[1]))\r\n                        // .attr('r', 0)\r\n                        .attr('rx', d=> r(d.total))\r\n                        .attr('ry', d=> r(d.total))\r\n                        .attr('stroke', '#000')\r\n                        .attr('stroke-width', '2px')\r\n                        .transition().duration(1000)\r\n                        .attr('r', r(d3.mean(data, d=> d.total)))\r\n                        .attr('cy', (d,i) => y(Math.floor(i/sqr)) + y.bandwidth()/2)\r\n            }\r\n\r\n            let stage3 = () => {\r\n                if (stage.direction === 'down'){\r\n                    let min = d3.min(data, d=> d.total)\r\n                    let max = d3.max(data, d=> d.total)\r\n    \r\n                    let buckets = Array(max - min + 1).fill().map((_, i) => min + i)\r\n    \r\n                    let countMax = 0;\r\n                    let bubblesInLoc = {}\r\n                    buckets.forEach(function(d){\r\n                        let count = d3.filter(data, v=> v.total === d).length\r\n                        countMax = Math.max(count, countMax)\r\n                        bubblesInLoc[d] = 0\r\n                    })\r\n    \r\n                    r.range([0, (height/countMax)/2])\r\n\r\n                    x.domain(buckets)\r\n                    y = d3.scaleLinear()\r\n                        .domain([0, countMax])\r\n                        .range([height, 0])\r\n    \r\n                    updateScales();\r\n                    makeLabels('Instances of Count', 'Number in Pack')\r\n                    stackedBubbles(data);\r\n                } else {\r\n                    let sqr = Math.sqrt(nextPerfectSquare(data.length))\r\n                    let dom = Array.from({length: sqr}, (x, i) => i)\r\n\r\n    \r\n                    x = d3.scaleBand()\r\n                        .domain(dom)\r\n                        .range([0, width])\r\n                        .padding(0)\r\n    \r\n                    y = d3.scaleBand()\r\n                        .domain(dom)\r\n                        .range([height, 0])\r\n                        .padding(0)\r\n\r\n                    let m = Math.min(x.bandwidth(), y.bandwidth())/2\r\n\r\n                    r.domain(d3.extent(data, d=> d.total))\r\n                        .range([m * 0.15, m])\r\n\r\n                    drawBubblesSize(data)\r\n\r\n                    hideLabels();\r\n                    xAxisCall\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n\r\n                    yAxisCall\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n\r\n                    yLines\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n                }\r\n            }\r\n\r\n            let stackedBubbles = (display) => {\r\n                let min = d3.min(data, d=> d.total)\r\n                let max = d3.max(data, d=> d.total)\r\n                let sqr = Math.sqrt(nextPerfectSquare(data.length))\r\n                let buckets = Array(max - min + 1).fill().map((_, i) => min + i)\r\n\r\n                let countMax = 0;\r\n                let bubblesInLoc = {}\r\n                buckets.forEach(function(d){\r\n                    let count = d3.filter(data, v=> v.total === d).length\r\n                    countMax = Math.max(count, countMax)\r\n                    bubblesInLoc[d] = 0\r\n                })\r\n\r\n                let bubbles = barChart.selectAll('ellipse')\r\n                        .data(display, d=> d.index)\r\n    \r\n                    bubbles.exit()\r\n                        .transition().duration(250)\r\n                        .attr('cy', height)\r\n                        .attr('r', 0)\r\n                        .remove()\r\n\r\n                    bubbles\r\n                        .transition().duration(1000)\r\n                        .attr('cx', d=> x(Math.round(d.total)) + x.bandwidth()/2)\r\n                        .attr('cy', function(d){\r\n                            let loc = y(bubblesInLoc[Math.round(d.total)])\r\n                            bubblesInLoc[d.total] += 1\r\n                            return loc - r.range()[1]\r\n                        })\r\n                        .attr('rx', x.bandwidth()/2 * 0.75)\r\n                        .attr('ry', 10)\r\n\r\n                    bubbles.enter()\r\n                        .append('ellipse')\r\n                        .attr('class', 'primary')\r\n                        .attr('stroke', '#000')\r\n                        .attr('stroke-width', '2px')\r\n                        .attr('cy', y(0))\r\n                        .attr('cx', d=> x(Math.round(d.total)) + x.bandwidth()/2)\r\n                        .transition().duration(1000)\r\n                        // .attr('r', r.range()[1])\r\n                        .attr('cy', function(d){\r\n                            let loc = y(bubblesInLoc[Math.round(d.total)])\r\n                            bubblesInLoc[d.total] += 1\r\n                            return loc - r.range()[1]\r\n                        })\r\n                        .attr('rx', x.bandwidth()/2 * 0.75)\r\n                        .attr('ry', 10)\r\n            }\r\n\r\n            let stage4 = () => {\r\n                if (stage.direction === 'down'){\r\n                    let sqr = Math.sqrt(nextPerfectSquare(data.length))\r\n                    let dom = Array.from({length: sqr}, (x, i) => i)\r\n                    x.domain(dom)\r\n                        .padding(0.1)\r\n                    y = d3.scaleBand()\r\n                        .domain(dom)\r\n                        .range([height, 0])\r\n                        .padding(0)\r\n                    stackedBubbles([])\r\n\r\n                    y = d3.scaleLinear()\r\n                        .domain([0, 1.2 * d3.max(barsData, function(d){ return d.total})])\r\n                        .range([height, 0])\r\n                    \r\n                    x = d3.scaleBand()\r\n                        .domain(snacks)\r\n                        .range([0, width])\r\n                        .padding(0.1)\r\n\r\n                    \r\n                    updateScales()\r\n                    drawTotal(barsData)\r\n                } else {\r\n                    drawTotal([])\r\n                    let min = d3.min(data, d=> d.total)\r\n                    let max = d3.max(data, d=> d.total)\r\n                    let buckets = Array(max - min + 1).fill().map((_, i) => min + i)\r\n                    let countMax = 0;\r\n                \r\n                    buckets.forEach(function(d){\r\n                        let count = d3.filter(data, v=> v.total === d).length\r\n                        countMax = Math.max(count, countMax)\r\n                    })\r\n\r\n                    x.domain(buckets)\r\n                    y = d3.scaleLinear()\r\n                        .domain([0, countMax])\r\n                        .range([height, 0])\r\n\r\n                    r.range([0, (height/countMax)/2])\r\n\r\n                    updateScales();\r\n\r\n\r\n                    stackedBubbles(data)\r\n                }\r\n                \r\n            }\r\n            \r\n            let drawTotal = (display) => {\r\n                let bars = barChart.selectAll('.total-bar')\r\n                    .data(display, d=> d.index)\r\n\r\n                bars.exit()\r\n                    .transition().duration(500)\r\n                    .attr('y', d=> y(0))\r\n                    .attr('height', 0)\r\n                    .remove()\r\n\r\n                bars\r\n                    .transition().duration(1000)\r\n                    .attr('height', d=> y(0) - y(d.total))\r\n                    .attr('y', d=>  y(d.total))\r\n                    .attr('width', x.bandwidth())\r\n                    .attr('x', d=> x(d.flavor))\r\n\r\n                bars.enter()\r\n                    .append('rect')\r\n                    .attr('class', 'total-bar')\r\n                    .attr('x', d=> x(d.flavor))\r\n                    .attr('y', d=> y(0))\r\n                    .attr('height', d=> 0)\r\n                    .attr('width', x.bandwidth())\r\n                    .attr('fill', (d, i) => colors[i])\r\n                    .attr('stroke', '#000')\r\n                    .attr('stroke-width', 2)\r\n                    .transition().duration(1000)\r\n                    .attr('height', d=> y(0) - y(d.total))\r\n                    .attr('y', d=>  y(d.total))\r\n            }\r\n\r\n            let stage5 = () => {\r\n                if (stage.direction === 'down'){\r\n                    x.padding(0.1)\r\n                    y.domain([0, 1.0])\r\n                    updateScales(5);\r\n                    totalToAvg(barsData);\r\n                    \r\n                } else {\r\n                    y = d3.scaleLinear()\r\n                        .domain([0, 1.2 * d3.max(barsData, function(d){ return d.total})])\r\n                        .range([height, 0])\r\n                \r\n                    x = d3.scaleBand()\r\n                        .domain(snacks)\r\n                        .range([0, width])\r\n                        .padding(0.1)\r\n\r\n                    \r\n                    updateScales()\r\n                    drawTotal(barsData)\r\n                }\r\n            }\r\n\r\n            let totalToAvg = (display) => {\r\n                    let bars = barChart.selectAll('.total-bar')\r\n                        .data(display, d=> d.index)\r\n    \r\n                    bars.exit()\r\n                        .transition().duration(500)\r\n                        .attr('y', d=> y(0))\r\n                        .attr('height', 0)\r\n                        .remove()\r\n    \r\n                    bars\r\n                        .transition().duration(1000)\r\n                        .attr('height', d=> y(0) - y(d.percentage))\r\n                        .attr('y', d=>  y(d.percentage))\r\n                        .attr('width', x.bandwidth())\r\n                        .attr('x', d=> x(d.flavor))\r\n    \r\n                    bars.enter()\r\n                        .append('rect')\r\n                        .attr('class', 'total-bar')\r\n                        .attr('x', d=> x(d.flavor))\r\n                        .attr('y', d=> y(0))\r\n                        .attr('height', d=> 0)\r\n                        .attr('width', x.bandwidth())\r\n                        .attr('fill', (d, i) => colors[i])\r\n                        .transition().duration(1000)\r\n                        .attr('height', d=> y(0) - y(d.percentage))\r\n                        .attr('y', d=>  y(d.percentage))\r\n                \r\n            }\r\n\r\n            let stage6 = () => {\r\n                if (stage.direction === 'down') {\r\n                    x.padding(0.1)\r\n                    y.domain([0, 1.0])\r\n                    updateScales();\r\n                    drawWhiskers(statistics)\r\n                } else {\r\n                    drawWhiskers(statistics, false)\r\n                    snacks.forEach(function(d, i){\r\n                        let percentage = d3.sum(data, v=> v[d])/d3.sum(data, v=> v.total)\r\n                        displayData[i].val = percentage\r\n                    })  \r\n                    let yMax = d3.max(statistics, d=> d.max)\r\n                    y.domain([0, yMax])\r\n                    updateScales();\r\n                    totalToAvg(barsData);\r\n                }\r\n            }\r\n\r\n            let drawWhiskers = (display, sel=true) => {\r\n                const delay = 500\r\n                const dur = 500\r\n                let whiskers = barChart.selectAll('.whiskers')\r\n                    .data(sel ? display : [], d=> d.id)\r\n\r\n                whiskers.exit().remove()\r\n\r\n                whiskers.enter()\r\n                    .append('line')\r\n                    .attr('class', 'whiskers')\r\n                    .attr('x1', d=> x(d.id) + x.bandwidth()/2)\r\n                    .attr('x2', d=> x(d.id) + x.bandwidth()/2)\r\n                    .attr('stroke', (d, i) => \"#000\")\r\n                    .attr('stroke-width', '2px')\r\n                    .attr('y1', d=> y(d.median))\r\n                    .attr('y2', d=> y(d.median))\r\n                    .transition().delay(delay).duration(dur)\r\n                    .attr('y1', d=> y(d.min))\r\n                    .attr('y2', d=> y(d.max))\r\n\r\n                let topLine = barChart.selectAll('.top-line')\r\n                    .data(sel ? display : [], d=> d.id)\r\n\r\n                topLine.exit().remove()\r\n                topLine.enter()\r\n                    .append('line')\r\n                    .attr('class', 'top-line')\r\n                    .attr('x1', d=> x(d.id) + x.bandwidth()/4)\r\n                    .attr('x2', d=> x(d.id) + x.bandwidth()* 3/4)\r\n                    .attr('stroke', (d, i) => \"#000\")\r\n                    .attr('stroke-width', '2px')\r\n                    .attr('y1', d=> y(d.median))\r\n                    .attr('y2', d=> y(d.median))\r\n                    .transition().delay(delay).duration(dur)\r\n                    .attr('y1', d=> y(d.max))\r\n                    .attr('y2', d=> y(d.max))\r\n                \r\n                let bottomLine = barChart.selectAll('.bottom-line')\r\n                    .data(sel ? display : [], d=> d.id)\r\n\r\n                bottomLine.exit().remove()\r\n                bottomLine.enter()\r\n                    .append('line')\r\n                    .attr('class', 'bottom-line')\r\n                    .attr('x1', d=> x(d.id) + x.bandwidth()/4)\r\n                    .attr('x2', d=> x(d.id) + x.bandwidth()* 3/4)\r\n                    .attr('stroke', (d, i) => \"#000\")\r\n                    .attr('stroke-width', '2px')\r\n                    .attr('y1', d=> y(d.median))\r\n                    .attr('y2', d=> y(d.median))\r\n                    .transition().delay(delay).duration(dur)\r\n                    .attr('y1', d=> y(d.min))\r\n                    .attr('y2', d=> y(d.min))\r\n\r\n                \r\n                let bars = barChart.selectAll('.total-bar')\r\n                    .data(sel ? display : [], d=> d.id)\r\n\r\n                bars.exit()\r\n                    .transition().duration(dur)\r\n                    .attr('height', 0)\r\n                    .attr('y', function(d, i){\r\n                        return y(display.length ? display[i].median : 0)\r\n                    })\r\n                    .remove()\r\n                \r\n                bars.enter()\r\n                    .append('rect')\r\n                    .attr('class', 'total-bar')\r\n                    .attr('id', d=> 'box-' + d.id)\r\n                    // .attr('class', d=> console.log(d))\r\n                    .attr('x', d=> x(d.id))\r\n                    .attr('width', x.bandwidth())\r\n                    .attr('fill', (d, i) => colors[i])\r\n                    .attr('y', d=> y(d.median))\r\n                    .attr('height', 0)\r\n                    .attr('stroke', '#000')\r\n                    .attr('stroke-width', '2px')\r\n                    .transition().delay(delay).duration(dur)\r\n                    .attr('y', d=> y(d.q3))\r\n                    .attr('height', d=> y(d.q1) - y(d.q3))\r\n\r\n                let midline = barChart.selectAll('.mid-line')\r\n                    .data(sel ? display : [], d=> d.id)\r\n\r\n                midline.exit().remove()\r\n\r\n                midline.enter()\r\n                    .append('line')\r\n                    .attr('class', 'mid-line')\r\n                    .attr('x1', d=> x(d.id) )\r\n                    .attr('x2', d=> x(d.id) + x.bandwidth())\r\n                    .attr('stroke', \"#000\")\r\n                    .attr('stroke-width', '2px')\r\n                    .attr('y1', d=> y(d.median))\r\n                    .attr('y2', d=> y(d.median))\r\n            }\r\n\r\n            let stage7 = () => {\r\n                if (stage.direction === 'down'){\r\n                    x.padding(0.1)\r\n                    y.domain([0, 1.0])\r\n                    updateScales();\r\n                    colorScale.range([\"#eb9be2 \", \"#e85248\", \"#f7ad5e\", \"#ebb7a9\", \"#f7639b\"])\r\n                    drawWhiskers(statistics)\r\n                    drawStatsBubbles(statsBubbles)\r\n\r\n                } else {\r\n                    colorScale.range(colors)\r\n                    drawStatsBubbles([])\r\n                }\r\n            }\r\n\r\n            let drawStatsBubbles = (display) => {\r\n                let bubbles = barChart.selectAll('.stats-bubbles')\r\n                    .data(display, d=> d.id)\r\n\r\n                bubbles.exit()\r\n                    .transition().duration(1000)\r\n                    .attr('r', 0)\r\n                    .remove()\r\n                \r\n                bubbles.enter()\r\n                    .append('circle')\r\n                    .attr('class', 'stats-bubbles')\r\n                    .attr('fill', d=> colorScale(d.flavor))\r\n                    .attr('cx', d=> x(d.flavor) + x.bandwidth()/2 + (0.5* Math.random() * x.bandwidth() - x.bandwidth()/4))\r\n                    .attr('cy', d=> y(d.percentage))\r\n                    .attr('r', 0)\r\n                    .attr('stroke', '#000')\r\n                    .attr('stroke-width', 1)\r\n                    .attr('opacity', 0.8)\r\n                    .transition().duration(1000)\r\n                    .attr('r', 5)\r\n            }\r\n\r\n            let stage8 = () => {\r\n                if (stage.direction === 'down'){\r\n                    drawWhiskers([], false)\r\n                    drawStatsBubbles([])\r\n                    x = d3.scaleBand()\r\n                        .domain(dataByBatch.map(d=> d.key))\r\n                        .range([0, width])\r\n                        .padding(0.1)\r\n                    y.domain([0, 1])\r\n                    updateScales();\r\n                    drawStackedArea(stackedData)\r\n                } else {\r\n                    drawStackedArea([])\r\n                    x.domain(snacks)\r\n                        .padding(0.1)\r\n                    y.domain([0, 1.0])\r\n                    updateScales();\r\n                    colorScale.range([\"#eb9be2 \", \"#e85248\", \"#f7ad5e\", \"#ebb7a9\", \"#f7639b\"])\r\n                    drawWhiskers(statistics)\r\n                    drawStatsBubbles(statsBubbles)\r\n                }\r\n            }\r\n\r\n            let drawStackedArea = (display) => {\r\n                let tmp = []\r\n                let counter = 0\r\n                if (display){\r\n                    display.forEach(function(d,i){\r\n                        d.forEach(function(v, j){\r\n                            tmp.push({\r\n                                y0: v[0],\r\n                                y1: v[1],\r\n                                key: v.data.key,\r\n                                id: counter,\r\n                                data: v.data,\r\n                                color: +i\r\n                            })\r\n                            counter += 1;\r\n                        })\r\n                    })\r\n                }\r\n                \r\n                let bars = barChart.selectAll('.boxes')\r\n                    .data(tmp, d=> d.id)\r\n\r\n                bars.exit()\r\n                    .transition().duration(250)\r\n                    .attr('y', y(0))\r\n                    .attr('height', 0)\r\n                    .remove()\r\n\r\n                bars\r\n                    .transition().duration(1000)\r\n                    .attr('y', d=> y(d.y1))\r\n                    .attr('height', d=> y(d.y0) - y(d.y1))\r\n                    .attr('x', d=> x(d.key))\r\n                    .attr('width', x.bandwidth())\r\n\r\n                bars.enter()\r\n                    .append('rect')\r\n                    .attr('class', 'boxes')\r\n                    .attr('id', d=> 'boxes-' + d.id)\r\n                    .attr('x', d=> x(d.key))\r\n                    .attr('width', x.bandwidth())\r\n                    .attr('stroke', '#000')\r\n                    .attr('fill', d=> colors[d.color])\r\n                    .attr('y', y(0))\r\n                    .attr('height', 0)\r\n                    .transition().duration(1000)\r\n                    .attr('y', d=> y(d.y1))\r\n                    .attr('height', d=> y(d.y0) - y(d.y1))\r\n            }\r\n\r\n            let stage9 = () => {\r\n                if (stage.direction === 'down'){\r\n                    \r\n                    hideLabels();\r\n                    xAxisCall\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n\r\n                    yAxisCall\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n\r\n                    yLines.transition().duration(1000)\r\n                        .attr('opacity', 0)\r\n                \r\n                    x = d3.scaleBand()\r\n                        .domain(dataByBatch.map(d=> d.key))\r\n                        .range([0, width])\r\n                        .padding(0.1)\r\n                    y.domain([0, 1])\r\n                    drawStackedArea([])\r\n                    drawCirclePack(snacksByPerson)\r\n                } else {\r\n                    drawCirclePack([])\r\n                    x = d3.scaleBand()\r\n                        .domain(dataByBatch.map(d=> d.key))\r\n                        .range([0, width])\r\n                        .padding(0.1)\r\n                    y.domain([0, 1])\r\n                    updateScales();\r\n                    drawStackedArea(stackedData)\r\n                }\r\n            }\r\n\r\n            let drawCirclePack = (display) => {\r\n                firstDraw=true\r\n                setTimeout(function(){\r\n                    firstDraw=false\r\n                }, 1000);\r\n\r\n                a = d3.scaleLinear()\r\n                    .domain([0, Math.sqrt(d3.max(display, d=> d.value))])\r\n                    .range([0,180])\r\n\r\n                \r\n                var node = barChart.selectAll('.node')\r\n                    .data(display, d=> d.key)\r\n\r\n                node.exit()\r\n                    .transition().duration(1000)\r\n                    .attr('r', 0)\r\n                    .attr('opacity', 0)\r\n                    .remove()\r\n\r\n                node.enter()\r\n                    .append('circle')\r\n                    .attr('class', 'node')\r\n                    .attr('id', d=> 'node-' + d.key)\r\n                    .attr('cx', width/2)\r\n                    .attr('cy', height/2)\r\n                    .attr('r', 0)\r\n                    .attr('fill', (d,i)=> d3.schemeCategory10[i % 10])\r\n                    .attr('stroke', '#000')\r\n                    .attr('stroke-width', 2)\r\n                    .attr('fill-opacity', 0.8)\r\n                    .transition().duration(1000)\r\n                    .attr('r', d=> a(Math.sqrt(d.value)))\r\n                    // .call(d3.drag()\r\n                    //     .on(\"start\", dragstarted)\r\n                    //     .on(\"drag\", dragged)\r\n                    //     .on('mousedown', console.log('here'))\r\n                    //     .on(\"end\", dragended))\r\n\r\n                    let text = barChart.selectAll('.node-text')\r\n                        .data(display, d=> d.key)\r\n\r\n                    text.exit()\r\n                        .attr('font-size', 0)\r\n                        .attr('opacity', 0)\r\n                    \r\n                    text.enter()\r\n                        .append('text')\r\n                        .attr('class', 'node-text')\r\n                        .attr('x', width/2)\r\n                        .attr('y', height/2)\r\n                        .attr('fill', '#fff')\r\n                        .text(d=> d.key)\r\n                        .attr('font-size', 26)\r\n                        .attr('font-weight', 700)\r\n                        .attr('opacity', 0)\r\n                        .attr('dominant-baseline', 'middle')\r\n                        .attr('text-anchor', 'middle')\r\n                        .transition().duration(1000)\r\n                        .attr('opacity', function(d){\r\n                            return a.domain()[1] * 0.3 <  Math.sqrt(d.value) ? 1 : 0\r\n                        })\r\n                    \r\n                let nodePadding = 2.5\r\n                simulation = d3.forceSimulation()\r\n                    .nodes(display)\r\n                    .force(\"forceX\", d3.forceX().strength(.1).x(width * .5))\r\n                    .force(\"forceY\", d3.forceY().strength(.1).y(height * .5))\r\n                    .force(\"center\", d3.forceCenter().x(width * .5).y(height * .5))\r\n                    .force(\"charge\", d3.forceManyBody().strength(-15))\r\n                    .force(\"collide\", d3.forceCollide().strength(.8).radius(function(d){ return a(Math.sqrt(d.value)) + nodePadding; }).iterations(1))\r\n                    // .force('center', d3.forceCenter().x(width/2).y(height/2))\r\n                    // .force('charge', d3.forceManyBody().strength(0.8))\r\n                    // .force('collide', d3.forceCollide().strength(0.1).radius(a.range()[1]).iterations(1))\r\n                    .on('tick', ()=> {ticked(display)})\r\n\r\n                \r\n\r\n                // simulation\r\n                //     .nodes(display)\r\n                //     .on('tick', function(d){\r\n                //         console.log(d)\r\n                //         node\r\n                //             .attr('cx', function(d){ return d.x})\r\n                //             .attr('cy', function(d){ return d.y})\r\n                //     })\r\n            }\r\n\r\n            let ticked = (display) => {\r\n                // console.log('ticked', d)\r\n                if (firstDraw){\r\n                    var u = barChart.selectAll('.node')\r\n                        .data(display, d=> d.key)\r\n                        .join('circle')\r\n                        .attr('class', 'node')\r\n                        .attr('id', d=> 'node-' + d.key)\r\n                        .attr('cx', width/2)\r\n                        .attr('cy', height/2)\r\n                        .attr('fill', (d,i)=> d3.schemeCategory10[i % 10])\r\n                        .attr('stroke', '#000')\r\n                        .attr('stroke-width', 2)\r\n                        .attr('fill-opacity', 0.8)\r\n                        .attr('cx', function(d, i){ \r\n                            // if (i % 1000) console.log(d)\r\n                            return d.x})\r\n                        .attr('cy', function(d){ return d.y})\r\n\r\n                    var t = barChart.selectAll('.node-text')\r\n                        .data(display, d=> d.key)\r\n                        .join('text')\r\n                        .attr('fill', '#fff')\r\n                        .text(d=> d.key)\r\n                        .attr('font-size', 26)\r\n                        .attr('class', 'node-text')\r\n                        .attr('font-weight', 700)\r\n                        .attr('dominant-baseline', 'middle')\r\n                        .attr('text-anchor', 'middle')\r\n                        .attr('x', d=> d.x)\r\n                        .attr('y', d=> d.y)\r\n                } else {\r\n                    var u = barChart.selectAll('.node')\r\n                        .data(display, d=> d.key)\r\n                        .join('circle')\r\n                        .attr('class', 'node')\r\n                        .attr('id', d=> 'node-' + d.key)\r\n                        .attr('cx', width/2)\r\n                        .attr('cy', height/2)\r\n                        .attr('fill', (d,i)=> d3.schemeCategory10[i % 10])\r\n                        .attr('stroke', '#000')\r\n                        .attr('stroke-width', 2)\r\n                        .attr('fill-opacity', 0.8)\r\n                        .attr('r', d=> a(Math.sqrt(d.value)))\r\n                        .attr('cx', function(d, i){ \r\n                            // if (i % 1000) console.log(d)\r\n                            return d.x})\r\n                        .attr('cy', function(d){ return d.y})\r\n\r\n                    var t = barChart.selectAll('.node-text')\r\n                        .data(display, d=> d.key)\r\n                        .join('text')\r\n                        .attr('fill', '#fff')\r\n                        .text(d=> d.key)\r\n                        .attr('font-size', 26)\r\n                        .attr('class', 'node-text')\r\n                        .attr('font-weight', 700)\r\n                        .attr('dominant-baseline', 'middle')\r\n                        .attr('text-anchor', 'middle')\r\n                        .attr('opacity', function(d){\r\n                            return a.domain()[1] * 0.3 <  Math.sqrt(d.value) ? 1 : 0\r\n                        })\r\n                        .attr('x', d=> d.x)\r\n                        .attr('y', d=> d.y)\r\n                }\r\n            }\r\n\r\n            let dragstarted = (event, d) => {\r\n                if (!event.active) simulation.alphaTarget(.03).restart();\r\n                d.fx = d.x;\r\n                d.fy = d.y;\r\n              }\r\n          \r\n            let dragged = (event, d) => {\r\n                d.fx = event.x;\r\n                d.fy = event.y;\r\n              }\r\n          \r\n            let dragended = (event, d) => {\r\n                if (event.active) simulation.alphaTarget(.03);\r\n                d.fx = null;\r\n                d.fy = null;\r\n              }\r\n\r\n            drawChart = (resizing = false) =>{\r\n                if (!statistics.length){\r\n                    snacks.forEach(function(d){\r\n                        let sorted = data.map(v=> +(v[d]/v.total).toFixed(2)).sort(d3.ascending)\r\n                        let q1 = d3.quantile(sorted, 0.25)\r\n                        let median = d3.quantile(sorted, 0.5)\r\n                        let q3 = d3.quantile(sorted, 0.75)\r\n                        let interQuartileRange = q3 - q1\r\n                        var min = q1 - 1.5 * interQuartileRange\r\n                        var max = q1 + 1.5 * interQuartileRange\r\n                        statistics.push({\r\n                            id: d,\r\n                            data: sorted,\r\n                            q1: q1,\r\n                            median: median,\r\n                            q3: q3,\r\n                            min: sorted[0],\r\n                            max: sorted[sorted.length -1]\r\n                        })\r\n                    })\r\n                }\r\n                firstRender = false;\r\n\r\n                if (stage.index === 1 ) stage0()\r\n                else if (stage.index === 2) stage1();\r\n                else if (stage.index === 3) stage2();\r\n                else if (stage.index === 4) stage3();\r\n                else if (stage.index === 5) stage4();\r\n                else if (stage.index === 6) stage5();\r\n                else if (stage.index === 7) stage6();\r\n                else if (stage.index === 8) stage7();\r\n                else if (stage.index === 9) stage8();\r\n                else if (stage.index === 10) stage9();\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    chart.data = function(value) {\r\n        if (!arguments.length) return data;\r\n        data = value;\r\n\r\n        drawChart(false);\r\n\r\n        return chart;\r\n    }\r\n\r\n    chart.width = function(value) {\r\n        if (!arguments.length) return width;\r\n        width = value;\r\n        x.range([0, width])\r\n        return chart;\r\n    }\r\n\r\n    chart.height = function(value) {\r\n        if (!arguments.length) return height;\r\n        height = value;\r\n        y.range([height, 0])\r\n        return chart;\r\n    }\r\n\r\n    chart.size = function(w, h){\r\n        if (!arguments.length) return {width: width, height: height}\r\n        chart.width(w - margin.left - margin.right);\r\n        chart.height(h - margin.top - margin.bottom);\r\n        if (firstRender) {   \r\n            drawChart(true);\r\n        }\r\n        return chart;\r\n    }\r\n\r\n    chart.stage = function(value) {\r\n        if (!arguments.length) return stage;\r\n        stage = value;\r\n        stageUpdate();\r\n        return chart;\r\n    }\r\n\r\n    return chart;\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Box, Text, Center, SimpleGrid, Icon, VStack} from \"@chakra-ui/react\";\r\n\r\nimport {Grape, Strawberry, Orange, Peach, Raspberry} from \"./../assets/FruitIcons\";\r\n\r\nconst Introduction = (props) => {\r\n\r\n    return (\r\n        <Center w=\"100%\">\r\n            <Box w=\"80%\" mt=\"100px\" px={10} py={5} bg=\"#fff\" display=\"inline-block\" borderRadius=\"20px\" border=\"1px solid\" borderColor=\"#000\"  boxShadow=\"5px 10px 10px #000\">\r\n                <Text fontSize=\"18px\" fontWeight={400} pl=\"5px\">\r\n                    Annecdotal observation:\r\n                </Text>\r\n                <Text color=\"grape\" fontWeight={700} fontSize=\"52px\" display=\"inline-block\" lineHeight=\"52px\">\r\n                    Grape \r\n                </Text>\r\n                <Text display=\"inline-block\" fontSize=\"32px\" mx={2}>\r\n                    feels significantly under represented in the Welch's fruit snack pack.\r\n                </Text>\r\n                <Text display=\"inline-block\" fontSize=\"32px\" fontWeight={500}  pl=\"5px\" pt={\"4px\"}>\r\n                    Is it though?\r\n                </Text>\r\n                <Text display=\"inline-block\" fontSize=\"32px\" mx={2}>\r\n                    Keep scrolling as we'll walk through the data\r\n                </Text>\r\n            </Box>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default Introduction;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Box, Text, Center, SimpleGrid, Icon, VStack} from \"@chakra-ui/react\";\r\n\r\nconst ScrollTextBox = ({opacity, children}) => {\r\n\r\n    return (\r\n        <Box w=\"100%\" display=\"block\" opacity={opacity}>\r\n            <Box marginLeft=\"auto\" w=\"550px\" bg=\"#fff\" border=\"1px solid #000\" borderRadius=\"20px\" boxShadow=\"5px 10px 10px #000\">\r\n                {children}\r\n            </Box>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ScrollTextBox;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Box, Text, Center, Button, VStack, Link} from \"@chakra-ui/react\";\r\nimport { Scrollama, Step } from 'react-scrollama';\r\nimport Tabletop from \"tabletop\";\r\n\r\nimport {MathJaxContext, MathJax} from \"better-react-mathjax\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport * as d3Collection from 'd3-collection';\r\n\r\nimport D3Container from \"./../components/D3Container\";\r\nimport scatterplot from \"./../components/d3/d3Viz\";\r\nimport ProgressBar from \"./../components/ProgressBar\";\r\nimport Snacks from \"./../components/Snacks\";\r\n\r\nimport Bars from \"./../components/d3/Bars\";\r\nimport Introduction from '../components/Introduction';\r\nimport ScrollTextBox from '../components/ScrollTextBox';\r\n\r\nimport {Element, animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nimport Papa from \"papaparse\";\r\n\r\nconst generateRandomMatrix = (n, m, x=1) => {\r\n    var matrix = []\r\n    for (var i=0; i < m; i++){\r\n      var tmp = []\r\n      for (var j=0; j < n; j++){\r\n        var num = Math.random() * x\r\n        if (x > 1){\r\n          num = Math.round(num)\r\n        }\r\n        tmp.push(i === j ? 0 : num)\r\n      }\r\n      matrix.push(tmp)\r\n    } \r\n    return matrix\r\n}\r\n\r\nconst randomDate = (start) => {\r\n    let end = new Date(start.getTime() + (1000 * 60 * 60 * 24 * 30))\r\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n}\r\n\r\nconst generateFakeSnackData = (n) => {\r\n    let snacks = [];\r\n    for (var i=0; i < n; i ++){\r\n        let tmp = {\r\n            date: null,\r\n            strawberry: 0,\r\n            raspberry: 0,\r\n            peach: 0,\r\n            orange: 0,\r\n            grape: 0,\r\n        }\r\n        for (var j = 0; j < 11; j++){\r\n            const s = Math.random()\r\n            if (s < 0.2) tmp.strawberry += 1\r\n            else if (s < 0.4) tmp.raspberry += 1\r\n            else if (s < 0.6) tmp.peach += 1\r\n            else if (s < 0.8) tmp.orange += 1\r\n            else tmp.grape += 1\r\n        }\r\n        tmp.date = randomDate(new Date(Date.now()))\r\n        snacks.push(tmp)\r\n    }\r\n    let sorted = snacks.sort(function(a, b){\r\n        return d3.ascending(a.date, b.date)\r\n    })\r\n    return sorted;\r\n}\r\n\r\nfunction noScroll() {\r\n    window.scrollTo(0, 0);\r\n}\r\n\r\nfunction disableScroll() {\r\n    window.removeEventListener('scroll', noScroll);\r\n}\r\n  \r\n  // call this to Enable\r\nfunction enableScroll() {\r\n    window.addEventListener('scroll', noScroll);\r\n}\r\n\r\nconst expectedAscii = \"$$E(x) = Σ_{i=1}^{N} P_{i}(x) * x_i$$\"\r\nlet expectedValue = \"0.0\"\r\n\r\nconst Main = (props) => {\r\n    const [stepIndex, setStepIndex] = useState(0)\r\n    const [direction, setDirection] = useState('down')\r\n    const [currentStepIndex, setCurrentStepIndex] = useState({index: 0, direction: \"down\"});\r\n    const [data, setData] = useState()\r\n    const stage = useRef({stage: 0});\r\n    const [stageVal, setStageVal] = useState(0)\r\n    const vizRef = useRef();\r\n    const flavors = ['grape', 'strawberry', 'orange', 'peach', 'raspberry']\r\n    let total = {}\r\n    let timeout = false;\r\n\r\n    useEffect(() => {\r\n        let url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRB4E_6RnpLP1wWMjqcwsUvotNATB8Np3OntlXb7066ULcAHI9oqqRhucltFifPTYNd7DRNRE56oTdt/pub?output=csv\"\r\n        let myurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRZIWXf1R3stgMAoS2ARiQTIUwHIIsDeuVjmDyhtBImrXwH5Iomn14qDEllZCiSMjzQHzeJZTyrXJoM/pub?gid=0&single=true&output=csv\"\r\n        // Tabletop.init({\r\n        //     // key: \"https://docs.google.com/spreadsheets/d/1tFpRixsmo0A6-sA4VP8X6xQ6WE6DJuNMxEXzsGh8Rak/edit?usp=sharing\",\r\n        //     // key: \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRZIWXf1R3stgMAoS2ARiQTIUwHIIsDeuVjmDyhtBImrXwH5Iomn14qDEllZCiSMjzQHzeJZTyrXJoM/pubhtml\",\r\n        //     key: \"1tFpRixsmo0A6-sA4VP8X6xQ6WE6DJuNMxEXzsGh8Rak\",\r\n        //     debug: true,\r\n        //     simpleSheet: true\r\n        // })\r\n        //     .then((tmp) => {\r\n        //         tmp.forEach(function(d){\r\n        //             d.timestamp = d3.timeParse(\"%m/%d/%Y\")(d.date)\r\n        //             d.grape = +d.grape\r\n        //             d.strawberry = +d.strawberry\r\n        //             d.orange = +d.orange\r\n        //             d.peach = +d.peach\r\n        //             d.raspberry = +d.raspberry\r\n        //             d.total =+ d.total\r\n        //             d.batch =+ d['Batch num']\r\n        //         })\r\n        //         setData(tmp)\r\n\r\n        //     })\r\n        //     .catch((err) => console.warn(err));\r\n        Papa.parse(myurl, {\r\n            download: true,\r\n            header: true,\r\n            complete: function(results){\r\n                let tmp = results.data\r\n                tmp.forEach(function(d){\r\n                    d.timestamp = d3.timeParse(\"%m/%d/%Y\")(d.date)\r\n                    d.grape = +d.grape\r\n                    d.strawberry = +d.strawberry\r\n                    d.orange = +d.orange\r\n                    d.peach = +d.peach\r\n                    d.raspberry = +d.raspberry\r\n                    d.total =+ d.total\r\n                    d.batch =+ d['Batch num']\r\n                    d.person = d['Who Ate Me?']\r\n                })\r\n                setData(tmp)\r\n            }\r\n        }\r\n        )\r\n    }, [])\r\n\r\n    const onStepEnter = ({data, direction, entry}) => {\r\n        if (direction === 'down') {\r\n            setCurrentStepIndex({index: data, direction: direction});\r\n            setStepIndex(data)\r\n        }\r\n        else {\r\n            setStepIndex(data)\r\n            // setCurrentStepIndex({data, direction: direction})\r\n        }\r\n    }\r\n\r\n    const onStepExit = ({data, direction, entry}) => {\r\n        // console.log(data, direction)\r\n        let tmp = direction === 'down' ? data + 1 : data -1;\r\n        if (direction === 'up') {\r\n            setCurrentStepIndex({index: data, direction: direction});\r\n        }\r\n        else {\r\n        }\r\n        // if (timeout) {\r\n        //     console.log('hit timeout condition')\r\n        //     return\r\n        // };\r\n        \r\n        // console.log('scrollbox target: ', 'scrollbox-' + tmp)\r\n        // timeout = true;\r\n        // disableScroll();\r\n\r\n        // scroller.scrollTo('scrollbox-' + tmp, {\r\n        //     duration: 1000,\r\n        //     delay: 0,\r\n        //     smooth: true,\r\n        //     offset: -500\r\n        // })\r\n\r\n        // setTimeout(function(){\r\n        //     timeout = false;\r\n        //     console.log('timeout cleared')\r\n        //     enableScroll();\r\n        // }, 2000)\r\n\r\n        \r\n    }\r\n    // let snackData = generateFakeSnackData(10);\r\n\r\n    const updateStage = () => {\r\n        stage.current.stage += 1;\r\n        setStageVal(stage.current.stage)\r\n    }\r\n\r\n    let snacksByPerson\r\n\r\n    if (data){\r\n        let c = d3Collection.nest()\r\n            .key(function(d){ return d.total})\r\n            .rollup(function(v){ return v.length})\r\n            .entries(data)\r\n\r\n        let exp = 0\r\n        c.forEach(function(d){\r\n            d.key = +d.key\r\n            d.probability = d.value/(data.length)\r\n            exp += d.probability * d.key\r\n        })\r\n        expectedValue = exp.toFixed(2)\r\n        flavors.forEach(function(d,i){\r\n            total[d] = d3.sum(data, v=> v[d])\r\n        })\r\n     \r\n        snacksByPerson= d3Collection.nest()\r\n            .key(function(d){ return d.person})\r\n            .rollup(function(v){ return v.length})\r\n            .entries(data)\r\n    \r\n        snacksByPerson = snacksByPerson.filter(d=> d.key != \"Unknown\")\r\n        snacksByPerson.sort((a,b) => d3.descending(a.value, b.value))\r\n        snacksByPerson = snacksByPerson.slice(0, 10)\r\n    }\r\n\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    let ranking = snacksByPerson ? (\r\n        <Box w=\"100%\" px=\"20px\" py=\"2px\">\r\n            {snacksByPerson.map((d,i)=> <Text py=\"4px\" color={d3.schemeCategory10[i]} fontWeight={500} fontSize=\"24px\"> {(i+1) + \". \" + d.key + \": \" + d.value } </Text>)}\r\n        </Box> \r\n        ) : null\r\n\r\n\r\n    return (\r\n        <Box w=\"100%\">\r\n            <ProgressBar stage={stepIndex}/>\r\n            <Box display=\"block\" h=\"80px\" w=\"100%\" bg=\"#044b59\" position=\"fixed\" bottom=\"0\" left=\"0\"  boxShadow=\"0px -5px 5px #000\">\r\n                <Center py=\"10px\" fontSize=\"18px\">\r\n                    <VStack>\r\n                    <Text color=\"#fff\"> \r\n                        Website built in Javascript ES6, using <Link href=\"https://reactjs.org/\" color=\"#42e3f5\"> React </Link> as the web framework, \r\n                        and <Link href=\"https://www.d3-graph-gallery.com/\" color=\"#42e3f5\"> D3 </Link> as the visulization library\r\n                    </Text>\r\n                    <Text color=\"#fff\"> \r\n                        Hosted on using Github.io. <Link href=\"https://reactjs.org/\" color=\"#42e3f5\"> Source Code </Link>\r\n                    </Text>\r\n                    </VStack>\r\n                </Center>\r\n            </Box>\r\n            <Center w=\"100%\" mt=\"30px\">\r\n                <Box w=\"100%\" px=\"150px\">\r\n                    <Box w=\"1400px\" h=\"900px\" m=\"auto\" position=\"fixed\" top=\"250px\" left=\"200px\">\r\n                        {data ? <D3Container ref={vizRef} id=\"counts-bars\" viz={Bars} data={data} stage={currentStepIndex} /> : null}\r\n                    </Box>\r\n                    <Scrollama \r\n                        onStepEnter={onStepEnter}\r\n                        offset={0.7}\r\n                        onStepExit={onStepExit}\r\n                        // debug\r\n                    >\r\n                        <Step data={0} key={0}>\r\n                            <Box id=\"scrollbox-0\">\r\n                                <Introduction/>\r\n                                <Snacks />\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={1} key={1}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox>\r\n                                    <Box px={10} py={15} id=\"scrollbox-1\">\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\"> Let's look at the data </Text>\r\n                                        {/* <Text display=\"inline-block\" fontSize=\"42px\" color=\"primary\" pl={\"4px\"} fontWeight={500}> Data </Text> */}\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\">  So far there have been roughly </Text>\r\n                                        <Center w=\"100%\">\r\n                                            <Text display=\"inline-block\" fontSize=\"48px\" color=\"primary\" fontWeight={500} > {\"N=\" + (data ? data.length + 90 * 9/2: \"\")} </Text>\r\n                                        </Center>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\"> {\"snack packs opened. For reference that is also about \" + numberWithCommas(data ? data.length + 90 * 8 * 90: \"\") +  \" calories of fruit snacks\" }</Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={2} key={2}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15} id=\"scrollbox-2\">\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\"> But not everyone is recording their data, so we have a recorded total of </Text>\r\n                                        <Center w=\"100%\">\r\n                                            <Text display=\"inline-block\" fontSize=\"48px\" color=\"primary\" fontWeight={500} > {\"N=\" + (data ? data.length + 1: \"\")} </Text>\r\n                                        </Center>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\"> { data ? \"just \" + (100 * data.length/ (data.length + 90 * 9/2)).toFixed(2) + \"% of available data. Not trying to shame but... do you guys even care about data? Looking at you data team\" : \"\"}  </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n\r\n                        <Step data={3} key={3}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={25} id=\"scrollbox-3\">\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\" mb=\"5px\"> Suprisingly, there is a large spread of gummies per pack.  This discrepancy is number of snacks per pack is very interesting it's so high</Text>\r\n                                        <Text display=\"block\" fontSize=\"42px\" color=\"primary\" fontWeight={500} lineHeight=\"48px\"> {\"Lowest: \" + (data ? d3.min(data, d=> d.total) : \"\")} </Text>\r\n                                        <Text display=\"block\" fontSize=\"42px\" color=\"primary\" fontWeight={500} lineHeight=\"48px\"> {\"Highest: \" + (data ? d3.max(data, d=> d.total) : \"\")} </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n\r\n                        <Step data={4} key={4}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> The Expected number of gummies in a pack is: </Text>\r\n                                        <MathJaxContext>\r\n                                            <MathJax>{expectedAscii}</MathJax>\r\n                                        </MathJaxContext>\r\n                                        <Center w=\"100%\">\r\n                                            <Text display=\"inline-block\" fontSize=\"42px\" color=\"primary\" fontWeight={500} lineHeight=\"42px\"> {\"Exp Gummies: \" + expectedValue} </Text>\r\n                                        </Center>\r\n                                        \r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\" mt=\"10px\"> The distribution at least roughly looks gaussian so... thats good I guess? </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n\r\n                        <Step data={5} key={5}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> Now we'll start looking at individual gummies. There has been </Text>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" color=\"primary\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\"> {\"Total: \" + (data ? d3.sum(data, d=> d.total) + \"*\" : \"\")} </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"grape\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Grape: \" + (data ? total['grape'] + \"*\" : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"strawberry\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Strawberry: \" + (data ? total['strawberry'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"orange\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Orange: \" + (data ? total['orange'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"peach\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Peach: \" + (data ? total['peach'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"raspberry\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Raspberry: \" + (data ? total['raspberry'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"inline-block\" fontSize=\"18px\" lineHeight=\"24px\" mt=\"20px\"> *Thanks Zach for adding Floats to this, that was nice to deal with </Text>\r\n                                    </Box>\r\n                                    \r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n\r\n                        {/* <Step data={5} key={5}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> That leads to the follow individual counts:  </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"grape\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Grape: \" + (data ? total['grape'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"strawberry\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Strawberry: \" + (data ? total['strawberry'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"orange\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Orange: \" + (data ? total['orange'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"peach\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Peach: \" + (data ? total['peach'] : \"0\" )}  \r\n                                        </Text>\r\n                                        <Text display=\"block\" fontSize=\"32px\" color=\"raspberry\" fontWeight={500} px={\"3px\"} lineHeight=\"48px\">\r\n                                            {\"Raspberry: \" + (data ? total['raspberry'] : \"0\" )}  \r\n                                        </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={6} key={6}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> \r\n                                            Let's get a better comparison of these \r\n                                        </Text>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\" color=\"primary\" pr=\"3px\" fontWeight={500}> \r\n                                            total numbers.\r\n                                        </Text>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> \r\n                                            We can see some clear statistical winners already\r\n                                        </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step> */}\r\n                        <Step data={6} key={6}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\"> \r\n                                            Now we'll normalize the numbers and look at the flavors as the raw percentage of each individual pack. We can see that Raspberry and Strawberry are clearly ahead.\r\n                                        </Text>\r\n                                        {/* <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\" color=\"primary\" pr=\"3px\" fontWeight={500}> \r\n                                            Percentages \r\n                                        </Text> */}\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={7} key={7}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\">\r\n                                            Let's look at the distribution of the flavors now. The Box plot shows the statistical spread, we can see that although some may have similar looking medians, there is a clear difference in the low end chance of grape. \r\n                                        </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={8} key={8}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\">\r\n                                            Adding the individual distribution numbers to get a sense of how they are spread out here.\r\n                                        </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={9} key={9}>\r\n                            <Box mt=\"100vh\" h=\"50vh\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={25}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\">\r\n                                            Let's take a look at this on a batch basis now. So far there has been 8 total batches we've gone through since starting to track data. \r\n                                        </Text>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\" py=\"10px\">\r\n                                            There definitely is some variation is the amount in each, particularly for graape and raspberry\r\n                                        </Text>\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                        </Step>\r\n                        <Step data={10} key={10}>\r\n                            <Box mt=\"100vh\" h=\"50vh\" mb=\"200px\">\r\n                                <ScrollTextBox >\r\n                                    <Box px={10} py={15}>\r\n                                        <Text display=\"inline-block\" fontSize=\"32px\" lineHeight=\"36px\">\r\n                                            Who's consuming the most fruit snacks?\r\n                                        </Text>\r\n                                        {ranking}\r\n                                    </Box>\r\n                                </ScrollTextBox>\r\n                            </Box>\r\n                            \r\n                        </Step>\r\n                        {/* <Box h=\"200px\"></Box> */}\r\n                    </Scrollama>\r\n                </Box>\r\n            </Center>\r\n            <Center mt=\"30px\">\r\n                \r\n            </Center>\r\n \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\n\nimport theme from \"./theme\";\nimport Main from \"./views/Main\";\n\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Main />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}